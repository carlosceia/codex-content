{"name":"GainsightService","id":"injectable-GainsightService-c7fe26975e0903740490636d3d2992b8f3dcc90120be6dae7dde26b67ea7bed3396ba73b42f3325b2a3e845c67fbc0cd0b9ff4c71e460b69928ae0a69065ee78","file":"core/product-experience/gainsight.service.ts","properties":[{"name":"HIDE_GAINSIGHT_BOT_STYLE_ID","defaultValue":"'hide-gs-bot'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":56,"modifierKind":[148]},{"name":"tagFunction$","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A subject that emits the tag function as soon as a new tag is set.</p>\n","line":44,"rawdescription":"\n\nA subject that emits the tag function as soon as a new tag is set.\n"},{"name":"trackingLoaded$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<boolean>","indexKey":"","optional":false,"description":"","line":45},{"name":"USER_PREFERENCES_GAINSIGHT_ENGAGEMENTS_KEY","defaultValue":"'gainsightBotEnabled'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>The name of the key remained unchanged, but applies to all engagements.</p>\n","line":55,"rawdescription":"\n\nThe name of the key remained unchanged, but applies to all engagements.\n","modifierKind":[148]},{"name":"USER_PREFERENCES_GAINSIGHT_KEY","defaultValue":"'gainsightEnabled'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>Gainsight is activated only when the cookie banner is present. If functional cookies are enabled, both personally identifiable information (PII) and required data are sent.\nOtherwise, only the required data is transmitted during the identity step execution.</p>\n","line":51,"rawdescription":"\n\nGainsight is activated only when the cookie banner is present. If functional cookies are enabled, both personally identifiable information (PII) and required data are sent.\nOtherwise, only the required data is transmitted during the identity step execution.\n","modifierKind":[148]}],"methods":[{"name":"canEditProductExperienceSettings","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":306,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDetermines if the current user has the capability to modify Gainsight PX settings.\n\nThis method checks multiple conditions:\n1. Whether tracking has been disabled globally via application options.\n2. Whether Gainsight is disabled at the tenant level through custom properties.\n3. Whether a Gainsight key is available, either currently loaded or fetched asynchronously.\n4. Whether cookie preferences are defined and available for the user.\n\n","description":"<p>Determines if the current user has the capability to modify Gainsight PX settings.</p>\n<p>This method checks multiple conditions:</p>\n<ol>\n<li>Whether tracking has been disabled globally via application options.</li>\n<li>Whether Gainsight is disabled at the tenant level through custom properties.</li>\n<li>Whether a Gainsight key is available, either currently loaded or fetched asynchronously.</li>\n<li>Whether cookie preferences are defined and available for the user.</li>\n</ol>\n","modifierKind":[134],"jsdoctags":[{"tagName":{"pos":11436,"end":11443,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Promise that resolves to a boolean. True indicates the user can edit product experience settings, and false otherwise.</p>\n"}]},{"name":"getGainsightKey","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[134]},{"name":"hashGroupName","args":[{"name":"groupName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"unknown","typeParameters":[],"line":323,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"groupName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"identify","args":[{"name":"sendPiiData","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"identifyData","type":"IdentifyData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nIdentifies the user/account at Gainsight.\n","description":"<p>Identifies the user/account at Gainsight.</p>\n","jsdoctags":[{"name":{"pos":6418,"end":6429,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"sendPiiData"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":6412,"end":6417,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Flag for sending personally identifiable information.</p>\n"},{"name":{"pos":6496,"end":6508,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"identifyData"},"type":"IdentifyData","deprecated":false,"deprecationMessage":"","tagName":{"pos":6490,"end":6495,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Object containing identification data.</p>\n"}]},{"name":"isCustomBranding","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":376,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDetermines if custom branding is enabled based on the presence of a brand logo.\n\n","description":"<p>Determines if custom branding is enabled based on the presence of a brand logo.</p>\n","jsdoctags":[{"tagName":{"pos":13903,"end":13910,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<ul>\n<li>True if custom branding is applied, false otherwise.</li>\n</ul>\n","returnType":"boolean"}]},{"name":"isGainsightDisabledAtTenantCustomProperties","args":[{"name":"customProperties","type":"ICustomProperties","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":366,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks if Gainsight is disabled based on tenant custom properties.\n\n","description":"<p>Checks if Gainsight is disabled based on tenant custom properties.</p>\n","jsdoctags":[{"name":{"pos":13452,"end":13468,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"customProperties"},"type":"ICustomProperties","deprecated":false,"deprecationMessage":"","tagName":{"pos":13446,"end":13451,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The custom properties of the tenant.</li>\n</ul>\n"},{"tagName":{"pos":13514,"end":13521,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<ul>\n<li>True if Gainsight is disabled, false otherwise.</li>\n</ul>\n","returnType":"boolean"}]},{"name":"isGainsightPreferenceDisabledInUserPreferences","args":[{"name":"preferenceName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks if the specified Gainsight preference is disabled in user preferences.\n","description":"<p>Checks if the specified Gainsight preference is disabled in user preferences.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":2927,"end":2941,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"preferenceName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2921,"end":2926,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Name of the Gainsight preference.</li>\n</ul>\n"},{"tagName":{"pos":2984,"end":2991,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A promise that resolves to <code>true</code> if the preference is disabled, otherwise <code>false</code>.</p>\n"}]},{"name":"isTrackingDisabled","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":385,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDetermines if tracking is disabled based on the application options.\n","description":"<p>Determines if tracking is disabled based on the application options.</p>\n","jsdoctags":[{"tagName":{"pos":14224,"end":14231,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p><code>true</code> if tracking is disabled, otherwise <code>false</code>.</p>\n"}]},{"name":"loadTag","args":[{"name":"currentTenant","type":"ICurrentTenant","deprecated":false,"deprecationMessage":""},{"name":"sendPiiData","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nLoad the script tag and calls the identify function to start the tracking.\n","description":"<p>Load the script tag and calls the identify function to start the tracking.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":4409,"end":4422,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"currentTenant"},"type":"ICurrentTenant","deprecated":false,"deprecationMessage":"","tagName":{"pos":4403,"end":4408,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The current tenant.</p>\n"},{"name":{"pos":4455,"end":4466,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"sendPiiData"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4449,"end":4454,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Flag for sending personally identifiable information (PII) during identification in Gainsight.</p>\n"}]},{"name":"setFunctionalCookie","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets the state of the functional cookie.\n","description":"<p>Sets the state of the functional cookie.</p>\n","jsdoctags":[{"name":{"pos":3388,"end":3393,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"value"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":3382,"end":3387,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>A boolean value to indicate whether the functional cookie should be enabled (<code>true</code>) or disabled (<code>false</code>).</li>\n</ul>\n"}]},{"name":"setGlobalContext","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":345,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets the global context for Gainsight with the current application name.\nThe global context can be utilized by Gainsight for various purposes, such as segmenting users.\n","description":"<p>Sets the global context for Gainsight with the current application name.\nThe global context can be utilized by Gainsight for various purposes, such as segmenting users.</p>\n"},{"name":"shouldSendPiiData","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":275,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDetermines whether personally identifiable information (PII) should be sent while loading a tag.\nThe decision to activate Gainsight and send PII relies on whether the cookiePreferences option is defined in the application settings,\nif the functional cookie is enabled, and if the user grants permission.\n","description":"<p>Determines whether personally identifiable information (PII) should be sent while loading a tag.\nThe decision to activate Gainsight and send PII relies on whether the cookiePreferences option is defined in the application settings,\nif the functional cookie is enabled, and if the user grants permission.</p>\n","modifierKind":[134]},{"name":"transformUserRolesToStr","args":[{"name":"userRoles","type":"IIdentified[]","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":352,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"userRoles","type":"IIdentified[]","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"translateToEnglish","args":[{"name":"textToTranslate","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":251,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"textToTranslate","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerEvent","args":[{"name":"eventName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"props","type":"PxEventData","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":244,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nTriggers an event to be recorded by Gainsight PX.\nThis method calls the Gainsight PX's tracking mechanism to log a specific event\nalong with its associated properties.\n","description":"<p>Triggers an event to be recorded by Gainsight PX.\nThis method calls the Gainsight PX&#39;s tracking mechanism to log a specific event\nalong with its associated properties.</p>\n","jsdoctags":[{"name":{"pos":8903,"end":8912,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"eventName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":8897,"end":8902,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Name of the event to be triggered.</li>\n</ul>\n"},{"name":{"pos":8962,"end":8967,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"props"},"type":"PxEventData","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":8956,"end":8961,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Optional properties associated with the event.</li>\n</ul>\n"}]},{"name":"updateUserAttribute","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string | Date | number | boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":291,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates a specific user attribute in the Gainsight global scope.\nThis method interfaces with the Gainsight global object to set a user's specific attribute with a provided value.\n","description":"<p>Updates a specific user attribute in the Gainsight global scope.\nThis method interfaces with the Gainsight global object to set a user&#39;s specific attribute with a provided value.</p>\n","jsdoctags":[{"name":{"pos":10658,"end":10662,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"name"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":10652,"end":10657,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Name of the user attribute to be updated.</li>\n</ul>\n"},{"name":{"pos":10719,"end":10724,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"value"},"type":"string | Date | number | boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":10713,"end":10718,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Value to set for the specified user attribute.</li>\n</ul>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>A service to manage the Gainsight integration. It allows to load the\ntag and</p>\n","rawdescription":"\n\nA service to manage the Gainsight integration. It allows to load the\ntag and\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"appState","type":"AppStateService","deprecated":false,"deprecationMessage":""},{"name":"options","type":"OptionsService","deprecated":false,"deprecationMessage":""},{"name":"cookieBannerService","type":"CookieBannerService","deprecated":false,"deprecationMessage":""},{"name":"userPreferencesService","type":"UserPreferencesService","deprecated":false,"deprecationMessage":""},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"appState","type":"AppStateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"OptionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cookieBannerService","type":"CookieBannerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userPreferencesService","type":"UserPreferencesService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"tagFunction":{"name":"tagFunction","getSignature":{"name":"tagFunction","type":"","returnType":"","line":114,"rawdescription":"\n\nReturns the tag global function which can be used to identify user\nor add special events.\n","description":"<p>Returns the tag global function which can be used to identify user\nor add special events.</p>\n"}}},"extends":[],"type":"injectable"}