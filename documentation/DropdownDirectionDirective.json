{"name":"DropdownDirectionDirective","id":"directive-DropdownDirectionDirective-23ab5c06e7b6e16f4a43536660bf898b12738e7fbd9afdcf947cd6ad2e095d7225529a3f4ad390276ec151228a11ae0bbc3da32a59bbf309eb27d84d90a967bf","file":"core/common/dropdown-direction.directive.ts","type":"directive","description":"<p>A directive to determine if a dropdown should open to the top or as usual to the bottom.\nIt starts by checking the available space on the closese parent container with the class\n<code>inner-scroll</code>, fallback to the <code>window.innerHeight</code> if no parent is found.\nThis directive has a direct dependency to the bootstrap dropdown (!)</p>\n<p>Preconditions:</p>\n<ul>\n<li>Bootstrap dropdown is used</li>\n<li>Bootstrap dropdown is not used with container=&quot;body&quot;</li>\n<li>Bootstrap dropdown is used like it is intended and documented for e.g.</li>\n</ul>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;div dropdown class=&quot;dropdown&quot;&gt;\n &lt;button class=&quot;dropdown-toggle&quot; dropdownToggle&gt;Toggle&lt;/button&gt;\n &lt;ul class=&quot;dropdown-menu&quot; *dropdownMenu&gt;\n   &lt;!-- Content here --&gt;\n &lt;/ul&gt;\n&lt;/div&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;div dropdown c8yBsDropdownDirection class=&quot;dropdown&quot;&gt;\n &lt;button class=&quot;dropdown-toggle&quot; dropdownToggle&gt;Toggle&lt;/button&gt;\n &lt;ul class=&quot;dropdown-menu&quot; *dropdownMenu&gt;\n   &lt;!-- Content here --&gt;\n &lt;/ul&gt;\n&lt;/div&gt;</code></pre></div><p>Make use of the bootstrap dropdown as usual and additionally add the direction directive to it.</p>\n","rawdescription":"\n\nA directive to determine if a dropdown should open to the top or as usual to the bottom.\nIt starts by checking the available space on the closese parent container with the class\n`inner-scroll`, fallback to the `window.innerHeight` if no parent is found.\nThis directive has a direct dependency to the bootstrap dropdown (!)\n\nPreconditions:\n - Bootstrap dropdown is used\n - Bootstrap dropdown is not used with container=\"body\"\n - Bootstrap dropdown is used like it is intended and documented for e.g.\n```html\n<div dropdown class=\"dropdown\">\n <button class=\"dropdown-toggle\" dropdownToggle>Toggle</button>\n <ul class=\"dropdown-menu\" *dropdownMenu>\n   <!-- Content here -->\n </ul>\n</div>\n```\n\n```html\n<div dropdown c8yBsDropdownDirection class=\"dropdown\">\n <button class=\"dropdown-toggle\" dropdownToggle>Toggle</button>\n <ul class=\"dropdown-menu\" *dropdownMenu>\n   <!-- Content here -->\n </ul>\n</div>\n```\nMake use of the bootstrap dropdown as usual and additionally add the direction directive to it.\n","selector":"[dropdown][c8yBsDropdownDirection],[dropdown][c8yDropdownDirection]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":51}],"propertiesClass":[],"methodsClass":[{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"'click'"}],"modifierKind":[170]}],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}