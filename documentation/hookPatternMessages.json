{"name":"hookPatternMessages","file":"core/i18n/patterns-message.hook.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>You can either provide a single <code>PatternMessages</code> as parameter:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> hookPatternMessages(...)</code></pre></div><p>Or an array to directly register multiple:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> hookPatternMessages([...])</code></pre></div><p>Or you provide an Service that implements <code>ExtensionFactory&lt;PatternMessages&gt;</code></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> export class MyPatternMessagesFactory implements ExtensionFactory&lt;PatternMessages&gt; {...}\n ...\n hookPatternMessages(MyPatternMessagesFactory)</code></pre></div><p>A typed alternative to <code>HOOK_PATTERN_MESSAGES</code>.</p>\n","args":[{"name":"patterns","type":"GenericHookType","deprecated":false,"deprecationMessage":""},{"name":"options","type":"Partial","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":{"pos":1014,"end":1022,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"patterns"},"type":"GenericHookType","deprecated":false,"deprecationMessage":"","tagName":{"pos":1008,"end":1013,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>The <code>PatternMessages</code>&#39;s or <code>ExtensionFactory</code> to be provided.</p>\n"},{"name":"options","type":"Partial","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"tagName":{"pos":1089,"end":1096,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An <code>Provider</code> to be provided in your module.</p>\n"}]}