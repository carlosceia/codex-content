{"name":"TenantUiService","id":"injectable-TenantUiService-9a175cc59c812fd4bbc7c2f1b9556d305a19abaed58e15a47a69c05b892f7295b19ae4a2291b95886b568ceb75405b9ddf96ce0cca445df56643c46d4533641e","file":"core/common/tenant-ui.service.ts","properties":[{"name":"MANAGEMENT","defaultValue":"'management'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"ROLE_TENANT_MANAGEMENT_READ","defaultValue":"Permissions.ROLE_TENANT_MANAGEMENT_READ","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]}],"methods":[{"name":"canReadTenants","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks whether the current user has read access to tenants, i.e.:\n- the current tenant can create subtenants or it's the management tenant,\n- the current user has ROLE_TENANT_MANAGEMENT_READ role.\n","description":"<p>Checks whether the current user has read access to tenants, i.e.:</p>\n<ul>\n<li>the current tenant can create subtenants or it&#39;s the management tenant,</li>\n<li>the current user has ROLE_TENANT_MANAGEMENT_READ role.</li>\n</ul>\n","jsdoctags":[{"tagName":{"pos":2828,"end":2835,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>True, if the current user has read access to tenants.</p>\n"}]},{"name":"getCurrentTenantPreferredLoginOption","args":[],"optional":false,"returnType":"ITenantLoginOption","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns current tenant preferred login mode.\n","description":"<p>Returns current tenant preferred login mode.</p>\n"},{"name":"getCurrentUserLoginMode","args":[],"optional":false,"returnType":"TenantLoginOptionType","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns current user login mode.\n","description":"<p>Returns current user login mode.</p>\n"},{"name":"getOauth2Option","args":[{"name":"loginOptions","type":"ITenantLoginOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ITenantLoginOption","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns Oauth2 login option if it can be used by UI.\n\n\n\n**Example**\n```typescript\n\n   (() => {\n     const oauth2 = tenantLoginOptionsService.getOauth2Option(loginOptions);\n  })();\n```\n","description":"<p>Returns Oauth2 login option if it can be used by UI.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const oauth2 = tenantLoginOptionsService.getOauth2Option(loginOptions);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":4996,"end":5008,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOptions"},"type":"ITenantLoginOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4990,"end":4995,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The list of all available tenant&#39;s login options.</p>\n"},{"tagName":{"pos":5070,"end":5077,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Returns ITenantLoginOption.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst oauth2 = tenantLoginOptionsService.getOauth2Option(loginOptions);\n})();</code></pre></div>"}]},{"name":"getPasswordStrengthSettings","args":[],"optional":false,"returnType":"Promise<PasswordStrengthSettings>","typeParameters":[],"line":279,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets password constraints setting from loginOptions.\n","description":"<p>Gets password constraints setting from loginOptions.</p>\n","modifierKind":[134],"jsdoctags":[{"tagName":{"pos":8604,"end":8611,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Returns Promise<PasswordStrengthSettings> with password properties.</p>\n"}]},{"name":"getPreferredLoginOption","args":[{"name":"loginOptions","type":"ITenantLoginOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ITenantLoginOption","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns tenant login option which is preferred.\n\n\n\n**Example**\n```typescript\n\n   (() => {\n     const preferredLoginOption = tenantLoginOptionsService.getPreferredLoginOption(loginOptions);\n  })();\n```\n","description":"<p>Returns tenant login option which is preferred.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const preferredLoginOption = tenantLoginOptionsService.getPreferredLoginOption(loginOptions);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":4021,"end":4033,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOptions"},"type":"ITenantLoginOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4015,"end":4020,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The list of all available tenant&#39;s login options.</p>\n"},{"tagName":{"pos":4095,"end":4102,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Returns ITenantLoginOption.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst preferredLoginOption = tenantLoginOptionsService.getPreferredLoginOption(loginOptions);\n})();</code></pre></div>"}]},{"name":"getSubscribedMicroservicesInCurrentTenant","args":[],"optional":false,"returnType":"IApplication[]","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets all application of type MICROSERVICE subscribed to the current tenant.\nIt checks the application references of the currentTenant from the application state.\nNo additional request.\n","description":"<p>Gets all application of type MICROSERVICE subscribed to the current tenant.\nIt checks the application references of the currentTenant from the application state.\nNo additional request.</p>\n"},{"name":"isBasic","args":[{"name":"loginOption","type":"ITenantLoginOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":219,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCallback which checks if login option type is 'BASIC'.\n\n\n**Example**\n```typescript\n\n   (() => {\n     const basicLoginOptions = loginOptions.filter(tenantLoginOptionsService.isBasic);\n  })();\n```\n","description":"<p>Callback which checks if login option type is &#39;BASIC&#39;.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const basicLoginOptions = loginOptions.filter(tenantLoginOptionsService.isBasic);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":6491,"end":6502,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOption"},"type":"ITenantLoginOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":6485,"end":6490,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The tenant login option.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst basicLoginOptions = loginOptions.filter(tenantLoginOptionsService.isBasic);\n})();</code></pre></div>"}]},{"name":"isEnterpriseTenant","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks whether current tenant is an enterprise tenant.\nAn enterprise tenant is a tenant which has subscribed:\n- `branding` microservice or `feature-branding` feature app,\n- `sslmanagement` microservice,\n- `feature-user-hierarchy` feature app,\n- `feature-broker` feature app.\n\nSee https://cumulocity.com/guides/users-guide/enterprise-edition/ for details about such tenants.\n\n","description":"<p>Checks whether current tenant is an enterprise tenant.\nAn enterprise tenant is a tenant which has subscribed:</p>\n<ul>\n<li><code>branding</code> microservice or <code>feature-branding</code> feature app,</li>\n<li><code>sslmanagement</code> microservice,</li>\n<li><code>feature-user-hierarchy</code> feature app,</li>\n<li><code>feature-broker</code> feature app.</li>\n</ul>\n<p>See <a href=\"https://cumulocity.com/guides/users-guide/enterprise-edition/\">https://cumulocity.com/guides/users-guide/enterprise-edition/</a> for details about such tenants.</p>\n","modifierKind":[134],"jsdoctags":[{"tagName":{"pos":1920,"end":1927,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>True, if current tenant is an enterprise tenant.</p>\n"}]},{"name":"isManagementTenant","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks whether current tenant is the management tenant.\n","description":"<p>Checks whether current tenant is the management tenant.</p>\n","modifierKind":[134],"jsdoctags":[{"tagName":{"pos":1260,"end":1267,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>True if current tenant is the management tenant.</p>\n"}]},{"name":"isMicroserviceSubscribedInCurrentTenant","args":[{"name":"identifier","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":249,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks if application of type MICROSERVICE is subscribed to the current tenant.\nIt checks the application references of the currentTenant from the application state.\nNo additional request.\n","description":"<p>Checks if application of type MICROSERVICE is subscribed to the current tenant.\nIt checks the application references of the currentTenant from the application state.\nNo additional request.</p>\n","jsdoctags":[{"name":{"pos":7595,"end":7605,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"identifier"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":7589,"end":7594,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>application name or contextPath</p>\n"}]},{"name":"isOauth2","args":[{"name":"loginOption","type":"ITenantLoginOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":236,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCallback which checks if login option type is 'OAUTH2' and grantType is 'AUTHORIZATION_CODE'.\n\n\n**Example**\n```typescript\n\n   (() => {\n     const oauth2LoginOptions = loginOptions.filter(tenantLoginOptionsService.OAUTH2);\n  })();\n```\n","description":"<p>Callback which checks if login option type is &#39;OAUTH2&#39; and grantType is &#39;AUTHORIZATION_CODE&#39;.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const oauth2LoginOptions = loginOptions.filter(tenantLoginOptionsService.OAUTH2);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":6953,"end":6964,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOption"},"type":"ITenantLoginOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":6947,"end":6952,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The tenant login option.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst oauth2LoginOptions = loginOptions.filter(tenantLoginOptionsService.OAUTH2);\n})();</code></pre></div>"}]},{"name":"isOauthInternal","args":[{"name":"loginOption","type":"ITenantLoginOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCallback which checks if login option type is 'OAUTH2_INTERNAL'.\n\n\n**Example**\n```typescript\n\n   (() => {\n     const oauth2InternalLoginOptions = loginOptions.filter(tenantLoginOptionsService.isOauthInternal);\n  })();\n```\n","description":"<p>Callback which checks if login option type is &#39;OAUTH2_INTERNAL&#39;.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const oauth2InternalLoginOptions = loginOptions.filter(tenantLoginOptionsService.isOauthInternal);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":6033,"end":6044,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOption"},"type":"ITenantLoginOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":6027,"end":6032,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The tenant login option.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst oauth2InternalLoginOptions = loginOptions.filter(tenantLoginOptionsService.isOauthInternal);\n})();</code></pre></div>"}]},{"name":"isVisibleOnLoginPage","args":[{"name":"loginOption","type":"ITenantLoginOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":185,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCallback which checks if login option is visible on login page.\n\n\n**Example**\n```typescript\n\n   (() => {\n     const loginOptionsVisibleOnLoginPage = loginOptions.filter(tenantLoginOptionsService.isVisibleOnLoginPage);\n  })();\n```\n","description":"<p>Callback which checks if login option is visible on login page.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n   (() =&gt; {\n     const loginOptionsVisibleOnLoginPage = loginOptions.filter(tenantLoginOptionsService.isVisibleOnLoginPage);\n  })();</code></pre></div>","jsdoctags":[{"name":{"pos":5579,"end":5590,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"loginOption"},"type":"ITenantLoginOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":5573,"end":5578,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The tenant login option.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">\n(() =&gt; {\nconst loginOptionsVisibleOnLoginPage = loginOptions.filter(tenantLoginOptionsService.isVisibleOnLoginPage);\n})();</code></pre></div>"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>The helper UI service for tenant related methods built upon client services.</p>\n","rawdescription":"\nThe helper UI service for tenant related methods built upon client services.","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"appStateService","type":"AppStateService","deprecated":false,"deprecationMessage":""},{"name":"tenantLoginOption","type":"TenantLoginOptionsService","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"appStateService","type":"AppStateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tenantLoginOption","type":"TenantLoginOptionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"currentTenant":{"name":"currentTenant","getSignature":{"name":"currentTenant","type":"","returnType":"ICurrentTenant","line":38,"rawdescription":"\n\nReturns current tenant\n","description":"<p>Returns current tenant</p>\n"}}},"extends":[],"type":"injectable"}