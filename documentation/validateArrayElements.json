{"name":"validateArrayElements","file":"core/forms/validate-array-elements.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>This method can alter how validators work. It can be used in cases where there is need to validate FormControl\nthat as value, takes array of elements. This allows to reuse validators, that works for such elements.\nFor example if  Validators.minLength(3) is used on control that takes string as value, validator will return error\nif string is less than 3 characters. If same is done on array of strings, validator will return error if array\nhas less than 3 elements.</p>\n<p>validateArrayElements(Validators.minLength(3)) method makes it possible to check every member of array if it has minimum 3 characters.\nIf there are elements that raise error, it will be possible to extract these errors using item index.</p>\n<p>As a example, this can be used for custom form elements, which manipulates array of elements,\nand there is need to display corresponding error messages for every array member that is displayed, while still using\nAngular&#39;s Validation approach.</p>\n<p>Errors that are generated by this helper are prefixed with &#39;INNER_ARRAY_ERROR_&#39;. Reason for this is to prevent overwriting normal validation\nerrors that could have same key</p>\n","args":[{"name":"validator","type":"ValidatorFn","deprecated":false,"deprecationMessage":""}],"returnType":"ValidatorFn","jsdoctags":[{"name":{"pos":2412,"end":2421,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"validator"},"type":"ValidatorFn","deprecated":false,"deprecationMessage":"","tagName":{"pos":2406,"end":2411,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>A standard Angular synchronous validator function.</p>\n"}]}