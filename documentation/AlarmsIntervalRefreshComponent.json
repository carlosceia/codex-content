{"name":"AlarmsIntervalRefreshComponent","id":"component-AlarmsIntervalRefreshComponent-7a9f008f4cfd65b7999543e731690f2a829299d6b933d784371897569298f4910f98b193e876ece5db4db76bee931a822a1aaa32e785f166d49565aba67fc3d1","file":"alarms/alarms-interval-refresh.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"c8y-alarms-interval-refresh","styleUrls":[],"styles":[],"templateUrl":["./alarms-interval-refresh.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"alarmsListLoading$","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nControls the loading state of the alarms list reload button.\n","description":"<p>Controls the loading state of the alarms list reload button.</p>\n","line":33,"type":"BehaviorSubject<boolean>","decorators":[]},{"name":"isDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"isIntervalToggleEnabled","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1500,"end":1718,"kind":341,"id":0,"flags":16842752,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":1501,"end":1506,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>A boolean value representing the new state of the <code>isIntervalEnabled</code> property.</li>\n</ul>\n<ul>\n<li><ul>\n<li><code>true</code> indicates that the interval is enabled.</li>\n</ul>\n</li>\n<li><ul>\n<li><code>false</code> indicates that the interval is disabled.</li>\n</ul>\n</li>\n</ul>\n","name":{"pos":1507,"end":1512,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"value"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\n\n* Set the value of `isIntervalEnabled` in response to user interactions with the alarm list scroll.\n *\n * This input setter allows you to control the `isIntervalEnabled` property, which is used to manage the state\n * of a toggle button. When a user scrolls through the alarms list, you can update the `isIntervalEnabled` value\n * using this setter.\n *\n * @param value - A boolean value representing the new state of the `isIntervalEnabled` property.\n *   - `true` indicates that the interval is enabled.\n *   - `false` indicates that the interval is disabled.\n","description":"<ul>\n<li>Set the value of <code>isIntervalEnabled</code> in response to user interactions with the alarm list scroll.</li>\n<li></li>\n<li>This input setter allows you to control the <code>isIntervalEnabled</code> property, which is used to manage the state</li>\n<li>of a toggle button. When a user scrolls through the alarms list, you can update the <code>isIntervalEnabled</code> value</li>\n<li>using this setter.</li>\n<li></li>\n<li>@param value - A boolean value representing the new state of the <code>isIntervalEnabled</code> property.</li>\n<li><ul>\n<li><code>true</code> indicates that the interval is enabled.</li>\n</ul>\n</li>\n<li><ul>\n<li><code>false</code> indicates that the interval is disabled.</li>\n</ul>\n</li>\n</ul>\n","line":46,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"onCountdownEnded","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEvent emitter for notifying when a countdown timer has completed.\n","description":"<p>Event emitter for notifying when a countdown timer has completed.</p>\n","line":83,"type":"EventEmitter"}],"propertiesClass":[{"name":"countdownIntervalComponent","deprecated":false,"deprecationMessage":"","type":"CountdownIntervalComponent","indexKey":"","optional":false,"description":"","line":86,"decorators":[{"name":"ViewChild","stringifiedArguments":"CountdownIntervalComponent"}],"modifierKind":[170]},{"name":"DISABLE_AUTO_REFRESH","defaultValue":"gettext('Disable auto refresh')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"ENABLE_AUTO_REFRESH","defaultValue":"gettext('Enable auto refresh')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"refreshIntervalsInMilliseconds","defaultValue":"this.alarmsViewService.DEFAULT_INTERVAL_VALUES","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"SECONDS_UNTIL_REFRESH","defaultValue":"gettext('{{ seconds }} s')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"toggleIntervalForm","defaultValue":"this.initForm()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":87}],"methodsClass":[{"name":"getTooltip","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":""},{"name":"resetCountdown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":""},{"name":"trackUserClickOnIntervalToggle","args":[{"name":"target","type":"EventTarget","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"target","type":"EventTarget","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"alarmsViewService","type":"AlarmsViewService","deprecated":false,"deprecationMessage":""}],"line":94,"jsdoctags":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alarmsViewService","type":"AlarmsViewService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","AfterViewInit","OnDestroy"],"accessors":{"isIntervalToggleEnabled":{"name":"isIntervalToggleEnabled","setSignature":{"name":"isIntervalToggleEnabled","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":46,"rawdescription":"\n\n* Set the value of `isIntervalEnabled` in response to user interactions with the alarm list scroll.\n *\n * This input setter allows you to control the `isIntervalEnabled` property, which is used to manage the state\n * of a toggle button. When a user scrolls through the alarms list, you can update the `isIntervalEnabled` value\n * using this setter.\n *\n * @param value - A boolean value representing the new state of the `isIntervalEnabled` property.\n *   - `true` indicates that the interval is enabled.\n *   - `false` indicates that the interval is disabled.\n","description":"<ul>\n<li>Set the value of <code>isIntervalEnabled</code> in response to user interactions with the alarm list scroll.</li>\n<li></li>\n<li>This input setter allows you to control the <code>isIntervalEnabled</code> property, which is used to manage the state</li>\n<li>of a toggle button. When a user scrolls through the alarms list, you can update the <code>isIntervalEnabled</code> value</li>\n<li>using this setter.</li>\n<li></li>\n<li>@param value - A boolean value representing the new state of the <code>isIntervalEnabled</code> property.</li>\n<li><ul>\n<li><code>true</code> indicates that the interval is enabled.</li>\n</ul>\n</li>\n<li><ul>\n<li><code>false</code> indicates that the interval is disabled.</li>\n</ul>\n</li>\n</ul>\n","jsdoctags":[{"name":{"pos":1507,"end":1512,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"value"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":1501,"end":1506,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>A boolean value representing the new state of the <code>isIntervalEnabled</code> property.</li>\n</ul>\n<ul>\n<li><ul>\n<li><code>true</code> indicates that the interval is enabled.</li>\n</ul>\n</li>\n<li><ul>\n<li><code>false</code> indicates that the interval is disabled.</li>\n</ul>\n</li>\n</ul>\n"}]},"getSignature":{"name":"isIntervalToggleEnabled","type":"boolean","returnType":"boolean","line":76,"rawdescription":"\n\nThis getter allows you to access the current state of the `isIntervalEnabled` property, which reflects\nthe state of a toggle button. It retrieves the value from the associated form control, providing the\ncurrent state of the toggle button.\n","description":"<p>This getter allows you to access the current state of the <code>isIntervalEnabled</code> property, which reflects\nthe state of a toggle button. It retrieves the value from the associated form control, providing the\ncurrent state of the toggle button.</p>\n"}}}}