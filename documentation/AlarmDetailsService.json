{"name":"AlarmDetailsService","id":"injectable-AlarmDetailsService-0aebb6fee4c34e6e3ad43e946295f829346dae0be4f83d1eac49d08009f341016f39e6692f9129932db394f8dc8b629ec296ce4395651eab18af9752518c76fa","file":"alarms/alarm-details.service.ts","properties":[],"methods":[{"name":"checkIfHasAnyRoleAllowingToCreateSmartRule","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"getAcknowledgedBy","args":[{"name":"status","type":"AlarmStatusType","deprecated":false,"deprecationMessage":""},{"name":"auditLog","type":"IAuditRecord[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRetrieves the username of the user who acknowledged an alarm status.\n\nThis method checks if the provided status is equal to the acknowledged\nstatus. If it is not, or if the\naudit log is empty or the first log item does not contain a user, the\nmethod returns a default value ('--').\n\nIf the status is the acknowledged status and the audit log contains valid\nrecords, the method iterates over the audit records in reverse order\n(starting from the most recent). It finds the first record where the\nstatus attribute (defined by this.STATUS_ATTRIBUTE) has been changed to\nthe acknowledged status. The method then returns the username of the user\nwho made this change.\n\nIf no such change is found in the audit records, it returns the username\nfrom the first record of the audit log.\n\nThere can be multiple audit logs with ACKNOWLEDGED status.\n\n          or '--' if the status is not acknowledged or audit log is invalid.\n","description":"<p>Retrieves the username of the user who acknowledged an alarm status.</p>\n<p>This method checks if the provided status is equal to the acknowledged\nstatus. If it is not, or if the\naudit log is empty or the first log item does not contain a user, the\nmethod returns a default value (&#39;--&#39;).</p>\n<p>If the status is the acknowledged status and the audit log contains valid\nrecords, the method iterates over the audit records in reverse order\n(starting from the most recent). It finds the first record where the\nstatus attribute (defined by this.STATUS_ATTRIBUTE) has been changed to\nthe acknowledged status. The method then returns the username of the user\nwho made this change.</p>\n<p>If no such change is found in the audit records, it returns the username\nfrom the first record of the audit log.</p>\n<p>There can be multiple audit logs with ACKNOWLEDGED status.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">      or &#39;--&#39; if the status is not acknowledged or audit log is invalid.</code></pre></div>","jsdoctags":[{"name":{"pos":1299,"end":1305,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"status"},"type":"AlarmStatusType","deprecated":false,"deprecationMessage":"","tagName":{"pos":1293,"end":1298,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The current status of the alarm.</li>\n</ul>\n"},{"name":{"pos":1353,"end":1361,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"auditLog"},"type":"IAuditRecord[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1347,"end":1352,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>An array of audit records to process.</li>\n</ul>\n"},{"tagName":{"pos":1408,"end":1415,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The username of the user who acknowledged the status\n or &#39;--&#39; if the status is not acknowledged or audit log is invalid.</p>\n"}]},{"name":"getAcknowledgeTime","args":[{"name":"auditLog","type":"IAuditRecord[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string | null","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCalculates the acknowledge time from a list of audit records.\n\nThis method iterates over the provided audit records in reverse order\n(starting from the most recent) and finds the first record where a\nspecific status attribute (defined by this.STATUS_ATTRIBUTE) has been\nacknowledged. It then returns the creation time of that record.\n\nIf no such record is found, the method returns the creation time of the\nfirst audit record. If the audit record list is empty, it returns null.\n\nThere can be multiple audit logs with ACKNOWLEDGED status.\n\n          the creation time of the first record if no acknowledged record is found,\n          or null if the audit log is empty.\n","description":"<p>Calculates the acknowledge time from a list of audit records.</p>\n<p>This method iterates over the provided audit records in reverse order\n(starting from the most recent) and finds the first record where a\nspecific status attribute (defined by this.STATUS_ATTRIBUTE) has been\nacknowledged. It then returns the creation time of that record.</p>\n<p>If no such record is found, the method returns the creation time of the\nfirst audit record. If the audit record list is empty, it returns null.</p>\n<p>There can be multiple audit logs with ACKNOWLEDGED status.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">      the creation time of the first record if no acknowledged record is found,\n      or null if the audit log is empty.</code></pre></div>","jsdoctags":[{"name":{"pos":2851,"end":2859,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"auditLog"},"type":"IAuditRecord[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2845,"end":2850,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>An array of audit records to process.</li>\n</ul>\n"},{"tagName":{"pos":2906,"end":2913,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The creation time of the acknowledged record,\n the creation time of the first record if no acknowledged record is found,\n or null if the audit log is empty.</p>\n"}]},{"name":"getEndTime","args":[{"name":"auditLog","type":"IAuditRecord[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string | null","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRetrieves the end time of an event from an audit log.\n\nThe method processes the provided audit log to find the first instance\n(starting from the most recent record) where the status was changed to 'CLEARED'.\nIt iterates over the audit records and\nchecks the changes in each record to find this status change.\n\nIf a record with the CLEARED status is found, the method returns the creation time\nof that record. If the entire audit log is processed without finding a CLEARED status,\nthe creation time of the first audit log record is returned.\n\nIf the audit log is empty or null, the method returns null.\n\nThere can be only one audit log with CLEARED status.\n\n         the creation time of the first record if no CLEARED status is found,\n         or null if the audit log is empty or null.\n","description":"<p>Retrieves the end time of an event from an audit log.</p>\n<p>The method processes the provided audit log to find the first instance\n(starting from the most recent record) where the status was changed to &#39;CLEARED&#39;.\nIt iterates over the audit records and\nchecks the changes in each record to find this status change.</p>\n<p>If a record with the CLEARED status is found, the method returns the creation time\nof that record. If the entire audit log is processed without finding a CLEARED status,\nthe creation time of the first audit log record is returned.</p>\n<p>If the audit log is empty or null, the method returns null.</p>\n<p>There can be only one audit log with CLEARED status.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">     the creation time of the first record if no CLEARED status is found,\n     or null if the audit log is empty or null.</code></pre></div>","jsdoctags":[{"name":{"pos":4402,"end":4410,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"auditLog"},"type":"IAuditRecord[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4396,"end":4401,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>An array of audit records to process.</li>\n</ul>\n"},{"tagName":{"pos":4457,"end":4464,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The creation time of the record with the CLEARED status,\nthe creation time of the first record if no CLEARED status is found,\nor null if the audit log is empty or null.</p>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"permissions","type":"Permissions","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"permissions","type":"Permissions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}