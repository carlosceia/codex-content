{"name":"tenantLimitsCustomPropertiesDefinition","ctype":"miscellaneous","subtype":"variable","file":"tenants/tenant-limits/tenant-limits-definitions.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\n  limitDevicesNumber: {\n    id: 'limit.devices.number',\n    validators: [Validators.min(0)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit number of devices'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 1000 }\n  },\n  limitHttpRequests: {\n    id: 'limit.http.requests',\n    validators: [Validators.min(-1)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit HTTP requests'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 10000 }\n  },\n  limitHttpQueue: {\n    id: 'limit.http.queue',\n    validators: [Validators.min(-1)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit HTTP queue'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  },\n  limitStreamRequests: {\n    id: 'limit.stream.requests',\n    validators: [Validators.min(-1)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit stream requests'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  },\n  limitStreamQueue: {\n    id: 'limit.stream.queue',\n    validators: [Validators.min(-1)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit stream queue'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  },\n  cepServerQueueLimit: {\n    id: 'cepServer.queue.limit',\n    validators: [Validators.min(-1)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit CEP server queue'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  },\n  dataBrokerQueueLimit: {\n    id: 'data-broker.queue.limit',\n    validators: [Validators.min(0)],\n    defaultValue: null,\n    type: 'number',\n    label: gettext('Limit data broker queue'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  },\n  deviceStorageLimitMiB: {\n    id: 'deviceStorageLimitMiB',\n    validators: [Validators.min(0), Validators.max(MAX_DEVICE_STORAGE_LIMIT_MiB)],\n    defaultValue: 0,\n    type: 'number',\n    label: gettext('Storage limit per device (MiB)'),\n    placeholder: gettext('e.g. {{ example }}'),\n    placeholderArgs: { example: 100 }\n  }\n} satisfies Record<string, TenantLimit>","rawdescription":"Define all hardTyped custom properties, and their configuration in one place.\n\nThis exported const utilizes typescript inferring,\nwhile still benefiting from hard typing, thanks to \"satisfies\" keyword","description":"<p>Define all hardTyped custom properties, and their configuration in one place.</p>\n<p>This exported const utilizes typescript inferring,\nwhile still benefiting from hard typing, thanks to &quot;satisfies&quot; keyword</p>\n"}