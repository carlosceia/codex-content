{"name":"ConditionalTabsOutletComponent","id":"component-ConditionalTabsOutletComponent-7af793a10bedaa5aae9f839586f2440730b9d41262b3f1d85fdda9d38d06072fce5f09d960057026843df74ce227791093892dcc37b4e510eab4cb8f1a9b76e1","file":"core/tabs/conditional-tabs-outlet.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"c8y-conditional-tabs-outlet","styleUrls":[],"styles":[],"template":"<router-outlet></router-outlet>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"RouterOutlet"}],"description":"<p>Register this component on the parent route of a view with multiple tabs where the first tab\nis displayed only conditionally.</p>\n<p>Given the following routes leading to a single view with multiple tabs:<br>\n/yourpath/tab-a -&gt; Tab A<br>\n/yourpath/tab-b -&gt; Tab B<br>\n/yourpath/tab-c -&gt; Tab C</p>\n<p>Your components will be registered like</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">export const routes: Route[] = [\n  {\n    path: &#39;yourpath/tab-a&#39;,\n    component: TabAComponent\n  },\n  {\n    path: &#39;yourpath/tab-b&#39;,\n    component: TabBComponent\n  },\n  {\n    path: &#39;yourpath/tab-c&#39;,\n    component: TabCComponent\n  }\n];</code></pre></div><p>In the simple case where Tab A is the first tab on the view and it is always displayed, you can register\nyour view in the navigation with a similar navigator node:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">new NavigatorNode({\n  label: gettext(&#39;My tabs&#39;),\n  path: &#39;yourpath/tab-a&#39;,\n  icon: &#39;gears&#39;,\n  parent: gettext(&#39;Some parent node&#39;),\n  priority: 100\n})</code></pre></div><p>This will navigate to the first tab&#39;s component and activate the first tab in the view.</p>\n<p>In case Tab A is displayed conditionally you cannot link it from a navigator node since it may not be available in some cases.\nIn this situation <code>ConditionalTabsOutletComponent</code> comes handy as it will forward users to the first available tab on your view:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">new NavigatorNode({\n  label: gettext(&#39;My tabs&#39;),\n  path: &#39;yourpath&#39;, // note that here we use only the parent route\n  icon: &#39;gears&#39;,\n  parent: gettext(&#39;Some parent node&#39;),\n  priority: 100\n})\n\n[...]\n\nexport const routes: Route[] = [\n  {\n    path: &#39;yourpath&#39;,\n    component: ConditionalTabsOutletComponent // we register ConditionalTabsOutletComponent for the parent path\n  },\n  {\n    path: &#39;yourpath/tab-a&#39;,\n    component: TabAComponent\n  },\n  {\n    path: &#39;yourpath/tab-b&#39;,\n    component: TabBComponent\n  },\n  {\n    path: &#39;yourpath/tab-c&#39;,\n    component: TabCComponent\n  }\n];</code></pre></div>","rawdescription":"\n\nRegister this component on the parent route of a view with multiple tabs where the first tab\nis displayed only conditionally.\n\nGiven the following routes leading to a single view with multiple tabs:<br>\n/yourpath/tab-a -> Tab A<br>\n/yourpath/tab-b -> Tab B<br>\n/yourpath/tab-c -> Tab C\n\nYour components will be registered like\n```typescript\nexport const routes: Route[] = [\n  {\n    path: 'yourpath/tab-a',\n    component: TabAComponent\n  },\n  {\n    path: 'yourpath/tab-b',\n    component: TabBComponent\n  },\n  {\n    path: 'yourpath/tab-c',\n    component: TabCComponent\n  }\n];\n```\n\nIn the simple case where Tab A is the first tab on the view and it is always displayed, you can register\nyour view in the navigation with a similar navigator node:\n\n```typescript\nnew NavigatorNode({\n  label: gettext('My tabs'),\n  path: 'yourpath/tab-a',\n  icon: 'gears',\n  parent: gettext('Some parent node'),\n  priority: 100\n})\n```\n\nThis will navigate to the first tab's component and activate the first tab in the view.\n\nIn case Tab A is displayed conditionally you cannot link it from a navigator node since it may not be available in some cases.\nIn this situation `ConditionalTabsOutletComponent` comes handy as it will forward users to the first available tab on your view:\n\n```typescript\nnew NavigatorNode({\n  label: gettext('My tabs'),\n  path: 'yourpath', // note that here we use only the parent route\n  icon: 'gears',\n  parent: gettext('Some parent node'),\n  priority: 100\n})\n\n[...]\n\nexport const routes: Route[] = [\n  {\n    path: 'yourpath',\n    component: ConditionalTabsOutletComponent // we register ConditionalTabsOutletComponent for the parent path\n  },\n  {\n    path: 'yourpath/tab-a',\n    component: TabAComponent\n  },\n  {\n    path: 'yourpath/tab-b',\n    component: TabBComponent\n  },\n  {\n    path: 'yourpath/tab-c',\n    component: TabCComponent\n  }\n];\n```\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"tabsService","type":"TabsService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":91,"jsdoctags":[{"name":"tabsService","type":"TabsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy"]}