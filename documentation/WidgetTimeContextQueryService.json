{"name":"WidgetTimeContextQueryService","id":"injectable-WidgetTimeContextQueryService-97602074b182c70c499534edf6413355f762a5d535293b32c4002d32670155efdc00c317f0b6c839ef55e8168d8efffe5d6d20aa9f3935647ab30f79f8f898b8","file":"core/dashboard/wiget-time-context/widget-time-context-query.service.ts","properties":[],"methods":[{"name":"clearQueryParams","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nClears all date time context related query parameters.\n","description":"<p>Clears all date time context related query parameters.</p>\n"},{"name":"dateTimeContextFromQueryParams","args":[],"optional":false,"returnType":"WidgetTimeContextState | null","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCreates widget time context from query parameters.\nInterval data takes precedence over date time context described by date \"from\" and date \"to\",\nso if valid interval is provided, date \"from\" and date \"to\" are ignored, and they are recalculated\nwith interval.\n\n","description":"<p>Creates widget time context from query parameters.\nInterval data takes precedence over date time context described by date &quot;from&quot; and date &quot;to&quot;,\nso if valid interval is provided, date &quot;from&quot; and date &quot;to&quot; are ignored, and they are recalculated\nwith interval.</p>\n","jsdoctags":[{"tagName":{"pos":1636,"end":1643,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Widget time context state based on current query params or null if query params provide no valid context.</p>\n"}]},{"name":"queryParamsChange$","args":[],"optional":false,"returnType":"Observable<InputDateContextQueryParams>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns observable that emits date context query params every time query params change.\nInvalid values are filtered out.\n\n","description":"<p>Returns observable that emits date context query params every time query params change.\nInvalid values are filtered out.</p>\n","jsdoctags":[{"tagName":{"pos":961,"end":968,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>Observable of date context query params.</p>\n"}]},{"name":"setDateContextQueryParams","args":[{"type":"WidgetTimeContextState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets query parameters related to date time context.\nValid interval (and other than 'custom') takes precedence over context described by date \"from\" and date \"to\".\nInterval and context described by date \"from\" and date \"to\" exclude each other.\n\n","description":"<p>Sets query parameters related to date time context.\nValid interval (and other than &#39;custom&#39;) takes precedence over context described by date &quot;from&quot; and date &quot;to&quot;.\nInterval and context described by date &quot;from&quot; and date &quot;to&quot; exclude each other.</p>\n","jsdoctags":[{"type":"WidgetTimeContextState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"WidgetTimeContextHelperService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"WidgetTimeContextHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}