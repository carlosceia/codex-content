{"name":"ContextDashboardComponent","id":"component-ContextDashboardComponent-690c076332b7d8996b59dcaa1e9b227182044ebf687715c04bffeb03e0f41bdaa65015d64d7b8e8505f32ca474158e0f3446a9a792339656e26e4f51b5f544c8","file":"context-dashboard/context-dashboard.component.ts","encapsulation":[],"entryComponents":[],"host":{},"inputs":[],"outputs":[],"providers":[],"selector":"c8y-context-dashboard","styleUrls":[],"styles":[],"templateUrl":["./context-dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"breadcrumbSettings","deprecated":false,"deprecationMessage":"","line":100,"type":"BreadcrumbItem","decorators":[]},{"name":"canCopy","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":94,"type":"boolean","decorators":[]},{"name":"canDelete","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":96,"type":"boolean","decorators":[]},{"name":"childrenClasses","defaultValue":"''","deprecated":false,"deprecationMessage":"","line":85,"type":"string","decorators":[]},{"name":"context","deprecated":false,"deprecationMessage":"","line":87,"type":"any","decorators":[]},{"name":"defaultWidgets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":92,"type":"Widget[]","decorators":[]},{"name":"hideAvailability","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nHides dashboard availability selection.\n","description":"<p>Hides dashboard availability selection.</p>\n","line":109,"type":"boolean","decorators":[]},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":98,"type":"boolean","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":83,"type":"string","decorators":[]},{"name":"setTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":89,"type":"boolean","decorators":[]},{"name":"showContextHelpButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":102,"type":"boolean","decorators":[]},{"name":"translateWidgetTitle","deprecated":false,"deprecationMessage":"","rawdescription":"\nWhether to translate widget titles. However, dashboard's own setting takes precedence. It does not override dashboard's setting","description":"<p>Whether to translate widget titles. However, dashboard&#39;s own setting takes precedence. It does not override dashboard&#39;s setting</p>\n","line":104,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"canCopy","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":129},{"name":"class","defaultValue":"''","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":112,"decorators":[{"name":"HostBinding","stringifiedArguments":"'class'"}],"modifierKind":[170]},{"name":"contextDashboardStateService","deprecated":false,"deprecationMessage":"","type":"ContextDashboardStateService<literal type>","indexKey":"","optional":false,"description":"","line":153,"modifierKind":[125]},{"name":"dashboard","deprecated":false,"deprecationMessage":"","type":"ContextDashboard","indexKey":"","optional":false,"description":"","line":125},{"name":"dashboardDetails","deprecated":false,"deprecationMessage":"","type":"DashboardDetailComponent","indexKey":"","optional":false,"description":"","line":114,"decorators":[{"name":"ViewChild","stringifiedArguments":"DashboardDetailComponent, {static: true}"}],"modifierKind":[170]},{"name":"dashboardTypeLabel","defaultValue":"gettext('Dashboard for \"{{ dashboardType }}\"')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":130,"modifierKind":[148]},{"name":"dashboardTypePopover","defaultValue":"gettext(`\n  The layout and configuration of this dashboard is used by all other assets of model type\n  <strong>{{ dashboardType }}</strong>. Any changes made to this dashboard instance will be applied to all\n  other instances.`)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":131,"modifierKind":[148]},{"name":"editModeService","deprecated":false,"deprecationMessage":"","type":"DashboardEditModeService","indexKey":"","optional":false,"description":"","line":154,"modifierKind":[125]},{"name":"isCopyDisabled","deprecated":false,"deprecationMessage":"","type":"DashboardCopyPermission","indexKey":"","optional":false,"description":"","line":127},{"name":"isNamedDashboard","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":117},{"name":"isReport","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":128},{"name":"mo","deprecated":false,"deprecationMessage":"","type":"ContextDashboardManagedObject","indexKey":"","optional":false,"description":"","line":124},{"name":"moduleConfig","deprecated":false,"deprecationMessage":"","type":"ContextDashboardConfig","indexKey":"","optional":false,"description":"","line":145,"decorators":[{"name":"Inject","stringifiedArguments":"CONTEXT_DASHBOARD_CONFIG"}],"modifierKind":[170,125]},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":126},{"name":"widgets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Widget[]","indexKey":"","optional":false,"description":"","line":123},{"name":"widgetsDashboard","deprecated":false,"deprecationMessage":"","type":"WidgetsDashboardComponent","indexKey":"","optional":false,"description":"","line":116,"decorators":[{"name":"ViewChild","stringifiedArguments":"WidgetsDashboardComponent, {static: true}"}],"modifierKind":[170]}],"methodsClass":[{"name":"addDashboardClassToBody","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":523,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nThis is a workaround to ensure that the dragged-element\n(which is attached to the body) has the right styling.\n","description":"<p>This is a workaround to ensure that the dragged-element\n(which is attached to the body) has the right styling.</p>\n"},{"name":"addWidget","args":[{"name":"selected","type":"DynamicComponentDefinition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAdds a widget to the dashboard.\n","description":"<p>Adds a widget to the dashboard.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":12779,"end":12787,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"selected"},"type":"DynamicComponentDefinition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":12773,"end":12778,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Define a selected component to switch to edit mode directly.</p>\n"}]},{"name":"applyDeviceTarget","args":[{"name":"widget","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nApplies the current context to the widget\n","description":"<p>Applies the current context to the widget</p>\n","jsdoctags":[{"name":{"pos":6115,"end":6121,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"widget"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":6109,"end":6114,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The widget to apply the context to.</p>\n"}]},{"name":"beforeUnloadHandler","args":[{"name":"$event","type":"BeforeUnloadEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":191,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"'window:beforeunload', ['$event']"}],"modifierKind":[170,134],"jsdoctags":[{"name":"$event","type":"BeforeUnloadEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"cancelEditMode","args":[{"name":"onDeactivate","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":463,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"onDeactivate","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"canDeactivate","args":[{"name":"omitConfirm","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGuards component from unintended navigation away or closing tab without saving changes.\nNavigation continues if true is returned, and navigation is cancelled if returned value is false.\non 'beforeunload' event handler, error is thrown in console because confirm is blocked by browser anyway and returns false)\n","description":"<p>Guards component from unintended navigation away or closing tab without saving changes.\nNavigation continues if true is returned, and navigation is cancelled if returned value is false.\non &#39;beforeunload&#39; event handler, error is thrown in console because confirm is blocked by browser anyway and returns false)</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":6724,"end":6735,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"omitConfirm"},"type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"pos":6718,"end":6723,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Omits confirm calls inside method body (without this param, when method is used in\non &#39;beforeunload&#39; event handler, error is thrown in console because confirm is blocked by browser anyway and returns false)</p>\n"}]},{"name":"copyDashboard","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":338,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCopies the dashboard and current context to a clipboard.\n","description":"<p>Copies the dashboard and current context to a clipboard.</p>\n","modifierKind":[134]},{"name":"dashboardPreview","args":[{"name":"layoutChanges","type":"ContextDashboard","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":582,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"layoutChanges","type":"ContextDashboard","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"deleteDashboard","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":361,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRemove the complete dashboard and navigate away.\n","description":"<p>Remove the complete dashboard and navigate away.</p>\n","modifierKind":[134]},{"name":"deleteWidget","args":[{"name":"change","type":"WidgetChange","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":496,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRemoves a widget and rearranges the remaining ones\nif necessary.\n","description":"<p>Removes a widget and rearranges the remaining ones\nif necessary.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":16120,"end":16126,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"change"},"type":"WidgetChange","deprecated":false,"deprecationMessage":"","tagName":{"pos":16114,"end":16119,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The change event.</p>\n"}]},{"name":"editWidget","args":[{"name":"change","type":"WidgetChange","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":378,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEdits a widget on the dashboard.\n","description":"<p>Edits a widget on the dashboard.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":12239,"end":12245,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"change"},"type":"WidgetChange","deprecated":false,"deprecationMessage":"","tagName":{"pos":12233,"end":12238,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The widget change event.</p>\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":211,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRemoves the route listener.\n","description":"<p>Removes the route listener.</p>\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":""},{"name":"onLoad","args":[{"name":"trackExperience","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":539,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"trackExperience","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"positionOrWidgetDimensionChange","args":[{"name":"child","type":"DashboardChildChange | DashboardChange","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":270,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nMethod called on every widgets dimensions or position change but also for adding new widget (because adding\nwidget causes layout changes). It recognizes what type of change has been done and updates current widgets state\naccordingly.\n","description":"<p>Method called on every widgets dimensions or position change but also for adding new widget (because adding\nwidget causes layout changes). It recognizes what type of change has been done and updates current widgets state\naccordingly.</p>\n","jsdoctags":[{"name":{"pos":8565,"end":8570,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"child"},"type":"DashboardChildChange | DashboardChange","deprecated":false,"deprecationMessage":"","tagName":{"pos":8559,"end":8564,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Change object.</p>\n"}]},{"name":"reloadDashboard","args":[{"name":"dashboardMo","type":"ContextDashboardManagedObject","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":598,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"dashboardMo","type":"ContextDashboardManagedObject","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeDashboardClassFromBody","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":533,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nThis is a workaround to ensure that the dragged-element\n(which is attached to the body) has the right styling.\n","description":"<p>This is a workaround to ensure that the dragged-element\n(which is attached to the body) has the right styling.</p>\n"},{"name":"restore","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRestores the dashboard widgets to the default widgets.\n","description":"<p>Restores the dashboard widgets to the default widgets.</p>\n","modifierKind":[134]},{"name":"revertChange","args":[{"name":"revertType","type":"RevertChangeType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":300,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"revertType","type":"RevertChangeType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveWidgetsToDashboard","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":438,"deprecated":false,"deprecationMessage":"","modifierKind":[134]},{"name":"updateDashboardChildren","args":[{"name":"child","type":"DashboardChildChange | DashboardChange","deprecated":false,"deprecationMessage":""},{"name":"changeName","type":"DashboardChildrenState","deprecated":false,"deprecationMessage":""},{"name":"descriptionProp","type":"","deprecated":false,"deprecationMessage":""},{"name":"widgetsChanged","type":"Widget[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":317,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates all dashboards children's. Useful for position changes on the dashboard.\n","description":"<p>Updates all dashboards children&#39;s. Useful for position changes on the dashboard.</p>\n","jsdoctags":[{"name":{"pos":10267,"end":10272,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"child"},"type":"DashboardChildChange | DashboardChange","deprecated":false,"deprecationMessage":"","tagName":{"pos":10261,"end":10266,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The child to change.</p>\n"},{"name":{"pos":10306,"end":10316,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"changeName"},"type":"DashboardChildrenState","deprecated":false,"deprecationMessage":"","tagName":{"pos":10300,"end":10305,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Name of the change to indicate it on undo/redo button.</p>\n"},{"name":{"pos":10384,"end":10399,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"descriptionProp"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":10378,"end":10383,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Property to add to dashboard change history.</p>\n"},{"name":{"pos":10457,"end":10471,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"widgetsChanged"},"type":"Widget[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":10451,"end":10456,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>List of changed widgets.</p>\n"}]},{"name":"updateWidget","args":[{"name":"widget","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":480,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates a widget or adds a new one if it doesn't exist on\nthe dashboard.\n","description":"<p>Updates a widget or adds a new one if it doesn&#39;t exist on\nthe dashboard.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":15674,"end":15680,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"widget"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":15668,"end":15673,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The new widget</p>\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","defaultValue":"''","deprecated":false,"deprecationMessage":"","line":112,"type":"string","decorators":[]}],"hostListeners":[{"name":"window:beforeunload","args":[{"name":"$event","type":"BeforeUnloadEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":191}],"standalone":false,"imports":[],"description":"<p>The context dashboard is a dashboard which resolves it data from the current context (device or group)\nit is displayed on. It usually uses the route.data for it, but you can pass\na different managedObject to the [mo] input parameter to change that behavior.</p>\n","rawdescription":"\n\nThe context dashboard is a dashboard which resolves it data from the current context (device or group)\nit is displayed on. It usually uses the route.data for it, but you can pass\na different managedObject to the [mo] input parameter to change that behavior.\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"contextDashboardService","type":"ContextDashboardService","deprecated":false,"deprecationMessage":""},{"name":"alert","type":"AlertService","deprecated":false,"deprecationMessage":""},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":""},{"name":"moduleConfig","type":"ContextDashboardConfig","deprecated":false,"deprecationMessage":""},{"name":"widgetService","type":"WidgetService","deprecated":false,"deprecationMessage":""},{"name":"bottomDrawerService","type":"BottomDrawerService","deprecated":false,"deprecationMessage":""},{"name":"gainsightService","type":"GainsightService","deprecated":false,"deprecationMessage":""},{"name":"actionBarService","type":"ActionBarService","deprecated":false,"deprecationMessage":""},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"modal","type":"ModalService","deprecated":false,"deprecationMessage":""},{"name":"destroyRef","type":"DestroyRef","deprecated":false,"deprecationMessage":""},{"name":"contextDashboardStateService","type":"ContextDashboardStateService<literal type>","deprecated":false,"deprecationMessage":""},{"name":"editModeService","type":"DashboardEditModeService","deprecated":false,"deprecationMessage":""},{"name":"queryParamHandler","type":"QueryParamModalHandlerService","deprecated":false,"deprecationMessage":""}],"line":137,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"contextDashboardService","type":"ContextDashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alert","type":"AlertService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"moduleConfig","type":"ContextDashboardConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"widgetService","type":"WidgetService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"bottomDrawerService","type":"BottomDrawerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gainsightService","type":"GainsightService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionBarService","type":"ActionBarService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"modal","type":"ModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destroyRef","type":"DestroyRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"contextDashboardStateService","type":"ContextDashboardStateService<literal type>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"editModeService","type":"DashboardEditModeService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"queryParamHandler","type":"QueryParamModalHandlerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy","CanDeactivateComponent"],"accessors":{"disabled":{"name":"disabled","getSignature":{"name":"disabled","type":"boolean","returnType":"boolean","line":119}},"isDeviceTypeDashboard":{"name":"isDeviceTypeDashboard","getSignature":{"name":"isDeviceTypeDashboard","type":"boolean","returnType":"boolean","line":370}}}}