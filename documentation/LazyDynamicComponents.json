{"name":"LazyDynamicComponents","id":"interface-LazyDynamicComponents-f021e5efc3e3c629feb87d919fa57286da9319e149c01e1883d5943e374a736a3077b26ea60711480d6ca995e965842a72e32373f4b77da5ed7cca4ebfd23fc5","file":"core/dynamic-component/dynamic-component.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","properties":[{"name":"component","deprecated":false,"deprecationMessage":"","type":"never","indexKey":"","optional":true,"description":"","line":348},{"name":"configComponent","deprecated":false,"deprecationMessage":"","type":"never","indexKey":"","optional":true,"description":"","line":362},{"name":"loadComponent","deprecated":false,"deprecationMessage":"","type":"function","indexKey":"","optional":false,"description":"<p>A function returning a promise of the component which is used when the component should be displayed (e.g. on a dashboard)</p>\n<p>A sample function to be provided could look like this:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">async function loadViewComponent() {\n const { LazyWidgetViewComponent } = await import(&#39;./lazy-widget-view&#39;);\n return LazyWidgetViewComponent;\n}</code></pre></div>","line":347,"rawdescription":"\n\nA function returning a promise of the component which is used when the component should be displayed (e.g. on a dashboard)\n\nA sample function to be provided could look like this:\n```\nasync function loadViewComponent() {\n const { LazyWidgetViewComponent } = await import('./lazy-widget-view');\n return LazyWidgetViewComponent;\n}\n```\n"},{"name":"loadConfigComponent","deprecated":true,"deprecationMessage":": Use a hookWidgetConfig instead.","type":"function","indexKey":"","optional":true,"description":"<p>A function returning a promise of the configuration component used when a widget is added or edited.</p>\n<p>A sample function to be provided could look like this:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\">async function loadConfigComponent() {\n const { LazyWidgetConfigComponent } = await import(&#39;./lazy-widget-config&#39;);\n return LazyWidgetConfigComponent;\n}</code></pre></div>","line":361,"rawdescription":"\n\nA function returning a promise of the configuration component used when a widget is added or edited.\n\nA sample function to be provided could look like this:\n```\nasync function loadConfigComponent() {\n const { LazyWidgetConfigComponent } = await import('./lazy-widget-config');\n return LazyWidgetConfigComponent;\n}\n```\n","jsdoctags":[{"pos":11848,"end":11896,"kind":331,"id":0,"flags":16777216,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":11849,"end":11859,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"deprecated"},"comment":"<p>: Use a hookWidgetConfig instead.</p>\n"}]}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}