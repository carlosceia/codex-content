{"name":"HumanizeValidationMessagePipe","id":"pipe-HumanizeValidationMessagePipe-a56fbd9504dc931c674ecb416f0a3562479864c2e40c8730cf3d5717c6f59740d1a6b3018a34a63afb5cbae8fa3f8599a3bf896c00762067a749f7fd6401e51d","file":"core/forms/humanize-validation-message.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"<p>This pipe is responsible for transforming validation error key to actual translatable that\nare defined in ValidationPattern class.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;c8y-message&gt;\n {{ &#39;minLength&#39; | humanizeValidationMessage }}\n&lt;/c8y-message&gt;</code></pre></div><p>Above code renders corresponding validation message for minLength:\n&quot;Should have at least {{ requiredLength }} characters&quot;</p>\n<p>It is possible to chain translate pipe:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">const errorData = { requiredLength: 5, actualLength: 1};</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;div&gt;\n {{ &#39;minLength&#39; | humanizeValidationMessage | translate: errorData  }}\n&lt;/div&gt;</code></pre></div><p>should render: &quot;Should have at least 5 characters&quot;</p>\n<p>It is also possible to provide custom translation message. For example:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">const errorData = { requiredLength: 5, actualLength: 1 };\nconst customMessages = {\n  minLength: gettext(&quot;File name should have at least {{ requiredLength }} characters&quot;)\n};</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;div&gt;\n {{ &#39;minLength&#39; | humanizeValidationMessage:customMessages | translate: errorData }}\n&lt;/div&gt;</code></pre></div><p>should render:\n&quot;File name should have at least 5 characters&quot;</p>\n","rawdescription":"\n\nThis pipe is responsible for transforming validation error key to actual translatable that\nare defined in ValidationPattern class.\n\n```html\n<c8y-message>\n {{ 'minLength' | humanizeValidationMessage }}\n</c8y-message>\n```\n\nAbove code renders corresponding validation message for minLength:\n\"Should have at least {{ requiredLength }} characters\"\n\nIt is possible to chain translate pipe:\n\n```ts\nconst errorData = { requiredLength: 5, actualLength: 1};\n```\n\n```html\n<div>\n {{ 'minLength' | humanizeValidationMessage | translate: errorData  }}\n</div>\n```\n\nshould render: \"Should have at least 5 characters\"\n\nIt is also possible to provide custom translation message. For example:\n\n```ts\nconst errorData = { requiredLength: 5, actualLength: 1 };\nconst customMessages = {\n  minLength: gettext(\"File name should have at least {{ requiredLength }} characters\")\n};\n```\n\n```html\n<div>\n {{ 'minLength' | humanizeValidationMessage:customMessages | translate: errorData }}\n</div>\n```\n\nshould render:\n\"File name should have at least 5 characters\"\n","properties":[],"methods":[{"name":"transform","args":[{"name":"errorName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"customMessages","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"string","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"errorName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"customMessages","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]}],"standalone":true,"ngname":"humanizeValidationMessage"}