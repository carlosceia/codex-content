{"name":"SelectKeyboardService","id":"injectable-SelectKeyboardService-7df6eb5def207c9acf70fadaf8aaa2ae6e01e68e2132a55094ba067996df0be331c6b705ad9d26a56127531805c3f71a7081acceb970914df5a1546850ed078b","file":"core/select/select-keyboard.service.ts","properties":[{"name":"options","defaultValue":"{\n    /**\n     * If true, the input will be cleared when the user selects an item.\n     */\n    emptyInput: false,\n    /**\n     * Search on key event.\n     */\n    keyboardSearch: false,\n    /**\n     * Space key event is used to select.\n     */\n    spaceSelect: false\n  }","deprecated":false,"deprecationMessage":"","type":"object","indexKey":"","optional":false,"description":"<p>Conifguration options for the keyboard service.</p>\n","line":42,"rawdescription":"\n\nConifguration options for the keyboard service.\n"}],"methods":[{"name":"isSelectionEvent","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns true if the keyboard event is fired by a selection event (Enter, Down, Tab, Up, Space)\n","description":"<p>Returns true if the keyboard event is fired by a selection event (Enter, Down, Tab, Up, Space)</p>\n","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":2913,"end":2920,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>true if the event is a selection event.</p>\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":""},{"name":"register$","args":[{"name":"input","type":"HTMLInputElement","deprecated":false,"deprecationMessage":""},{"name":"list","type":"QueryList<ListItemComponent>","deprecated":false,"deprecationMessage":""},{"name":"dropdown","type":"BsDropdownDirective","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRegisters the keyboard event listener for the dropdown.\n\n","description":"<p>Registers the keyboard event listener for the dropdown.</p>\n","jsdoctags":[{"name":{"pos":1608,"end":1613,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"input"},"type":"HTMLInputElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":1602,"end":1607,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The input element to search for items.</p>\n"},{"name":{"pos":1665,"end":1669,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"list"},"type":"QueryList<ListItemComponent>","deprecated":false,"deprecationMessage":"","tagName":{"pos":1659,"end":1664,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>A QueryList of all the [ListItemComponent] on which can be searched</p>\n"},{"name":{"pos":1750,"end":1758,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"dropdown"},"type":"BsDropdownDirective","deprecated":false,"deprecationMessage":"","tagName":{"pos":1744,"end":1749,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The dropdown itself as [BsDropdownDirective].</p>\n"},{"tagName":{"pos":1811,"end":1818,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A Observable<number> where number is the index of the selected [ListItemComponent]</p>\n"}]},{"name":"unregister","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUnregister the keyboard event listner.\n","description":"<p>Unregister the keyboard event listner.</p>\n"}],"deprecated":false,"deprecationMessage":"","description":"<p>This service provides keyboard navigation for dropdowns.</p>\n<p>It allows to navigate over the items in the dropdown using the keyboard\nor search for them. For this to correctly work, the service needs to provided\nas component provider in the component. Additionally the <code>ListItemComponent</code>\nneeds to be used in the dropdown items. Also each item needs to have a\nspan[data-search-label] element to search for the item.</p>\n","rawdescription":"\n\nThis service provides keyboard navigation for dropdowns.\n\nIt allows to navigate over the items in the dropdown using the keyboard\nor search for them. For this to correctly work, the service needs to provided\nas component provider in the component. Additionally the `ListItemComponent`\nneeds to be used in the dropdown items. Also each item needs to have a\nspan[data-search-label] element to search for the item.\n","extends":[],"type":"injectable"}