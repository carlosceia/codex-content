{"name":"ApiService","id":"injectable-ApiService-18ad678d9a7f686780c54bbc9ea6c0437dc938d0d84b7c40c3a22bc5c0cd99432beb1a1b2e3c19e673e81f9724413684f9b37047ff7e974dc1d164cd4a58b97c","file":"api/api.service.ts","properties":[{"name":"calls","deprecated":false,"deprecationMessage":"","type":"Observable<ApiCall>","indexKey":"","optional":false,"description":"","line":17},{"name":"isLoading$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":18}],"methods":[{"name":"addInterceptor","args":[{"name":"interceptor","type":"HttpInterceptor","deprecated":false,"deprecationMessage":""},{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to intercept requests performed via the FetchClient requests.\n","description":"<p>Allows to intercept requests performed via the FetchClient requests.</p>\n","jsdoctags":[{"name":{"pos":3919,"end":3930,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"interceptor"},"type":"HttpInterceptor","deprecated":false,"deprecationMessage":"","tagName":{"pos":3913,"end":3918,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The interceptor to be added.</p>\n"},{"name":{"pos":3972,"end":3974,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3966,"end":3971,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>An optional unique identifier for the interceptor. The chain of interceptors is ordered by this id. And it can be used to remove the interceptor later on.</p>\n"},{"tagName":{"pos":4136,"end":4143,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The id of the interceptor (same as provided id if one was provided, otherwise an id will be generated).</p>\n"}]},{"name":"excludePermissionCall","args":[],"optional":false,"returnType":"MonoTypeOperatorFunction<ApiCall>","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCan be added to a pipe to exclude any permission call. Permission calls are PUT\nrequest with only an id in it, to verify if the user has access to this managed object.\n","description":"<p>Can be added to a pipe to exclude any permission call. Permission calls are PUT\nrequest with only an id in it, to verify if the user has access to this managed object.</p>\n","jsdoctags":[{"tagName":{"pos":3337,"end":3344,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The operator to be added to a pipe.</p>\n"}]},{"name":"hasInterceptor","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks if an interceptor with a given id exists.\n","description":"<p>Checks if an interceptor with a given id exists.</p>\n","jsdoctags":[{"name":{"pos":4853,"end":4855,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4847,"end":4852,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The id of the interceptor.</p>\n"},{"tagName":{"pos":4889,"end":4896,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<ul>\n<li>Returns true if an interceptor with the given id exists, otherwise false.</li>\n</ul>\n"}]},{"name":"hookRequest","args":[{"name":"hookFilter","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"Observable<ApiCall>","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to hook into the requests performed by the FetchClient.\nThis is meant to be used to react on the requests, not for manipulation of the requests.\n","description":"<p>Allows to hook into the requests performed by the FetchClient.\nThis is meant to be used to react on the requests, not for manipulation of the requests.</p>\n","jsdoctags":[{"name":{"pos":1935,"end":1945,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"hookFilter"},"type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}],"tagName":{"pos":1929,"end":1934,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>A filter function to filter for specific requests.</p>\n"},{"tagName":{"pos":2003,"end":2010,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An Observable of the filtered requests.</p>\n"}]},{"name":"hookResponse","args":[{"name":"hookFilter","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"Observable<ApiCall>","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to hook into the responses received by the FetchClient.\nThis is meant to be used to react on the responses, not for manipulation of the responses.\n","description":"<p>Allows to hook into the responses received by the FetchClient.\nThis is meant to be used to react on the responses, not for manipulation of the responses.</p>\n","jsdoctags":[{"name":{"pos":1432,"end":1442,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"hookFilter"},"type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}],"tagName":{"pos":1426,"end":1431,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>A filter function to filter for specific responses.</p>\n"},{"tagName":{"pos":1501,"end":1508,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An Observable of the filtered responses.</p>\n"}]},{"name":"onFinish","args":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onStart","args":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeInterceptor","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to remove a previously added interceptor by it's id.\n","description":"<p>Allows to remove a previously added interceptor by it&#39;s id.</p>\n","jsdoctags":[{"name":{"pos":4535,"end":4537,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4529,"end":4534,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The id of the interceptor that should be removed.</p>\n"},{"tagName":{"pos":4594,"end":4601,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>true if an interceptor existed and has been removed, or false if id does not exist.</p>\n"}]},{"name":"resolveData","args":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<literal type>","typeParameters":["T"],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nResolves data from an API call response.\n","description":"<p>Resolves data from an API call response.</p>\n","jsdoctags":[{"name":"call","type":"ApiCall","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":2504,"end":2511,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A Promise containing an object with resolved data, method, and URL.</p>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"client","type":"FetchClient","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"client","type":"FetchClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}