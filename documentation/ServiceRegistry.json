{"name":"ServiceRegistry","id":"injectable-ServiceRegistry-f357827a0382b6ae8c5a189983bab0f4e56c0116859749273c63e705d06603a25be08d60e158899deecede5b1f75493c236631b574e09e0706030af1a5f0c36d","file":"core/common/service-registry.service.ts","properties":[{"name":"injectors","deprecated":false,"deprecationMessage":"","type":"Injector[]","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[124]}],"methods":[{"name":"get","args":[{"name":"key","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"R[]","typeParameters":["T","R"],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRetrieves instances of services registered under a specified extension key.\n\n\n```html\n```typescript\n// Retrieving instances of Service example\nconst layersServices = serviceRegistry.get('layersServiceKey');\nlayersServices.forEach(service => service.get().then(layer => console.log(layer)));\n```\n```","description":"<p>Retrieves instances of services registered under a specified extension key.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">```typescript\n// Retrieving instances of Service example\nconst layersServices = serviceRegistry.get(&#39;layersServiceKey&#39;);\nlayersServices.forEach(service =&gt; service.get().then(layer =&gt; console.log(layer)));</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-none\"></code></pre></div>","jsdoctags":[{"name":{"pos":1935,"end":1938,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"key"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":1929,"end":1934,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The extension key associated with the desired service.</li>\n</ul>\n"},{"tagName":{"pos":2002,"end":2009,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An array of service instances registered under the given key.</p>\n"},{"tagName":{"pos":2083,"end":2090,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"example"},"comment":"<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">// Retrieving instances of Service example\nconst layersServices = serviceRegistry.get(&#39;layersServiceKey&#39;);\nlayersServices.forEach(service =&gt; service.get().then(layer =&gt; console.log(layer)));</code></pre></div>"}]},{"name":"getRegisteredExtensionKeys","args":[],"optional":false,"returnType":"Array<CumulocityServiceRegistry.ExtensionKeys>","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to retrieve all registered extension keys.\n\n","description":"<p>Allows to retrieve all registered extension keys.</p>\n","jsdoctags":[{"tagName":{"pos":2794,"end":2801,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An array of extension keys that have been registered.</p>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service for managing and retrieving dynamically registered services within the application.\nIt leverages a map of InjectionTokens to associate services with unique extension keys.</p>\n","rawdescription":"\n\nService for managing and retrieving dynamically registered services within the application.\nIt leverages a map of InjectionTokens to associate services with unique extension keys.\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"rootInjector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"pluginService","type":"PluginsResolveService","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"rootInjector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pluginService","type":"PluginsResolveService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}