{"name":"MESSAGES_SMS_GATEWAY","ctype":"miscellaneous","subtype":"variable","file":"sms-gateway/pattern-messages.data.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\n  '^Sender name$': {\n    gettext: gettext('Sender name')\n  },\n  '^Sender name used for sent SMS$': {\n    gettext: gettext('Sender name used for sent SMS')\n  },\n  '^Sender address$': {\n    gettext: gettext('Sender address')\n  },\n  '^Sender address used for sent SMS$': {\n    gettext: gettext('Sender address used for sent SMS')\n  },\n  '^Username$': {\n    gettext: gettext('Username')\n  },\n  '^Password$': {\n    gettext: gettext('Password')\n  },\n  '^Licence key$': {\n    gettext: gettext('License key')\n  },\n  '^Key$': {\n    gettext: gettext('Key')\n  },\n  '^API base URL$': {\n    gettext: gettext('API base URL')\n  },\n  '^API URL$': {\n    gettext: gettext('API URL')\n  },\n  '^oauth$': {\n    gettext: gettext('OAuth')\n  },\n  '^basic$': {\n    gettext: gettext('Basic')\n  },\n  '^Authentication method$': {\n    gettext: gettext('Authentication method')\n  },\n  '^Defines which authentication method is used with the provider$': {\n    gettext: gettext('Defines which authentication method is used with the provider')\n  },\n  '^Static headers$': {\n    gettext: gettext('Static headers')\n  },\n  '^Static headers that should be added to requests towards the provider$': {\n    gettext: gettext('Static headers that should be added to requests towards the provider')\n  },\n  '^OAuth token URL$': {\n    gettext: gettext('OAuth token URL')\n  },\n  '^URL where the OAuth token is requested from (required if OAuth method is chosen)$': {\n    gettext: gettext(\n      'URL where the OAuth token is requested from (required if OAuth method is selected)'\n    )\n  },\n  '^OAuth toke mime type$': {\n    gettext: gettext('OAuth token mime type')\n  },\n  '^Overrides the OAuth token response mime type$': {\n    gettext: gettext('Overrides the OAuth token response mime type')\n  },\n  '^OAuth access toke type$': {\n    gettext: gettext('OAuth access token type')\n  },\n  '^Overrides the OAuth access token type$': {\n    gettext: gettext('Overrides the OAuth access token type')\n  },\n  '^Global configuration$': {\n    gettext: gettext('Global configuration')\n  },\n  '^Enables or disables if the settings may be used globally for all tenants (Only possible in management tenant)$':\n    {\n      gettext: gettext(\n        'Enables or disables the settings globally for all tenants (only possible in management tenant)'\n      )\n    },\n  '^API key$': {\n    gettext: gettext('API key')\n  },\n  '^Inherit to subtenants$': {\n    gettext: gettext('Inherit to subtenants')\n  },\n  \"^Enables or disables if this tenant's configuration may be inherited to subtenants$\": {\n    gettext: gettext(\n      'Enables or disables the option to inherit the tenant configuration to subtenants'\n    )\n  },\n  '^Login$': {\n    gettext: gettext('Login')\n  },\n  '^Source business unit ID$': {\n    gettext: gettext('Source business unit ID')\n  },\n  '^Client ID$': {\n    gettext: gettext('Client ID')\n  },\n  '^Client secret$': {\n    gettext: gettext('Client secret')\n  }\n} as const"}