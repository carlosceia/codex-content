{"name":"RegisterDeviceExtension","ctype":"miscellaneous","subtype":"typealias","rawtype":"RegisterDeviceItem | RegisterDeviceItem[] | ExtensionFactory<RegisterDeviceItem>","file":"register-device/dropdown/register-device-extension.service.ts","deprecated":false,"deprecationMessage":"","description":"<p>An extension HOOK can use either a pure value:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> { provide: HOOK_X, useValue: { ...hookValue }, multi: true }</code></pre></div><p>Or an array to directly register multiple:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> { provide: HOOK_X, useValue: [{ ...hookValues }], multi: true }</code></pre></div><p>Or an ExtensionFactory which allows to define a get() function. This function\ngets called on each navigation with the current route and can return values\nasync (observable or promise).</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> { provide: HOOK_X, useFactory: { get: (route) =&gt; doSomethingAsync(route) }, multi: true }</code></pre></div>","kind":192}