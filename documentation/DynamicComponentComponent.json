{"name":"DynamicComponentComponent","id":"component-DynamicComponentComponent-70337224529e11c487d62c841289e9450fb91503c0fc43c341d88e7addf39e063ddeaf822e45a5bd5fd8addb97ae13e258ebb8db513c23508b0208c2e7e122ea","file":"core/dynamic-component/dynamic-component.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"c8y-dynamic-component","styleUrls":[],"styles":[],"templateUrl":["./dynamic-component.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"componentId","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nThe ID of the registered component. It needs to be a component that is hooked\nwith the HOOK_COMPONENTS extension hook.\n","description":"<p>The ID of the registered component. It needs to be a component that is hooked\nwith the HOOK_COMPONENTS extension hook.</p>\n","line":84,"type":"string","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nThe configuration to pass.\n","description":"<p>The configuration to pass.</p>\n","line":88,"type":"","decorators":[]},{"name":"executeResolvers","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nIf set to true, it will execute the components resolvers before initializing the component.\nDefaults to false.\n","description":"<p>If set to true, it will execute the components resolvers before initializing the component.\nDefaults to false.</p>\n","line":102,"type":"boolean","decorators":[]},{"name":"mode","defaultValue":"'component'","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDynamicComponents can have two modes, an edit (config) and an view (component) mode.\nBy default it is shown in the component mode.\n","description":"<p>DynamicComponents can have two modes, an edit (config) and an view (component) mode.\nBy default it is shown in the component mode.</p>\n","line":93,"type":"\"config\" | \"component\"","decorators":[]},{"name":"notFoundError","defaultValue":"true","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDisable this to hide the error that is shown if the component was not found.\n","description":"<p>Disable this to hide the error that is shown if the component was not found.</p>\n","line":97,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"updateWidgetClasses","defaultValue":"new EventEmitter<Record<string, boolean>>()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to set additional classes for widget styling.\n","description":"<p>Allows to set additional classes for widget styling.</p>\n","line":106,"type":"EventEmitter"}],"propertiesClass":[{"name":"componentInstance","deprecated":false,"deprecationMessage":"","type":"DynamicComponent","indexKey":"","optional":false,"description":"","line":119},{"name":"dynamicComponentErrorStrategy","defaultValue":"DynamicComponentErrorStrategy","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":121},{"name":"errorStrategy","deprecated":false,"deprecationMessage":"","type":"DynamicComponentErrorStrategy","indexKey":"","optional":false,"description":"","line":120}],"methodsClass":[{"name":"callLifeCycleHooks","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCalls the dynamic component life cycle hook. Currently only\nsupporting onBeforeSave, a hook which is called before a config component\nis saved.\n","description":"<p>Calls the dynamic component life cycle hook. Currently only\nsupporting onBeforeSave, a hook which is called before a config component\nis saved.</p>\n"},{"name":"emitConfigChange","args":[{"name":"newConfigValues","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nIf an outside component changes the configuration, this function triggers ngOnChange on the dynamic component.\n","description":"<p>If an outside component changes the configuration, this function triggers ngOnChange on the dynamic component.</p>\n","jsdoctags":[{"name":{"pos":5582,"end":5597,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"newConfigValues"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":5576,"end":5581,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The new configuration value.</p>\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":193,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"NgIf"},{"name":"IconDirective","type":"directive"},{"name":"C8yTranslateDirective","type":"directive"},{"name":"CollapseModule","type":"module"},{"name":"DynamicComponentAlertsComponent","type":"component"},{"name":"C8yTranslatePipe","type":"pipe"},{"name":"AsyncPipe","type":"pipe"}],"description":"<p>C8y dynamic component.</p>\n<p>register component in HOOK in module:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> import { hookComponent } from &#39;&#64;c8y/ngx-components&#39;;\n\n&#64;NgModule({\n ...,\n providers: [\n   hookComponent({\n     id: &#39;test-component&#39;,\n     label: &#39;My test component&#39;,\n     description: &#39;this is test component&#39;,\n     component: TestComponent\n   })\n ...\n ]\n</code></pre></div><p>Showing dynamic component:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;c8y-dynamic-component [componentId]=&quot;&#39;test-component&#39;&quot; [config]=&quot;config&quot;&gt;&lt;/c8y-dynamic-component&gt;</code></pre></div>","rawdescription":"\n\nC8y dynamic component.\n\nregister component in HOOK in module:\n```typescript\n import { hookComponent } from '@c8y/ngx-components';\n\n@NgModule({\n ...,\n providers: [\n   hookComponent({\n     id: 'test-component',\n     label: 'My test component',\n     description: 'this is test component',\n     component: TestComponent\n   })\n ...\n ]\n\n```\nShowing dynamic component:\n```html\n<c8y-dynamic-component [componentId]=\"'test-component'\" [config]=\"config\"></c8y-dynamic-component>\n```\n","type":"component","assetsDirs":[],"extends":[],"implements":["OnDestroy"]}