{"name":"C8yTranslateDirective","id":"directive-C8yTranslateDirective-7f7b99f4db712a12df4a50514ccc61e6b2e4a9bd8a6ee7435db087b0a706feb481126653727e6322076c11c2efda61d174f66e9b840d65b4cfd9e083523db5a9","file":"core/i18n/c8y-translate.directive.ts","type":"directive","description":"","rawdescription":"\n","selector":"[translate],[ngx-translate]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"destroy$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":56},{"name":"elementTranslated","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":57},{"name":"htmlMode","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"<p>When this directive encounters element that is HTML, it should switch to Html mode even if\nnew translated element does not contain any HTML.</p>\n","line":53,"rawdescription":"\n\nWhen this directive encounters element that is HTML, it should switch to Html mode even if\nnew translated element does not contain any HTML.\n"},{"name":"htmlUpdateEvent","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<void>","indexKey":"","optional":false,"description":"<p>Used to trigger events when html is replaced by directive.</p>\n","line":41,"rawdescription":"\n\nUsed to trigger events when html is replaced by directive.\n"},{"name":"initialValue","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":55},{"name":"lastTranslation","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>When this directive successfully translates node, it stores its value in this property.\nAnother translation will be performed only if new translation value differs from stored one.</p>\n","line":47,"rawdescription":"\n\nWhen this directive successfully translates node, it stores its value in this property.\nAnother translation will be performed only if new translation value differs from stored one.\n"}],"methodsClass":[{"name":"checkNodes","args":[{"name":"forceUpdate","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"},{"name":"translations","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nOverridden method from original directive.\nFor simple text nodes, it just invokes the base method.\nFor complex nodes, it builds translation key from whole inner HTML\nand replaces it with its translation.\nThis prevents splitting HTML into pieces and attempting to translate each one separately\nwhich doesn't work, because we extract strings in whole.\n","description":"<p>Overridden method from original directive.\nFor simple text nodes, it just invokes the base method.\nFor complex nodes, it builds translation key from whole inner HTML\nand replaces it with its translation.\nThis prevents splitting HTML into pieces and attempting to translate each one separately\nwhich doesn&#39;t work, because we extract strings in whole.</p>\n","jsdoctags":[{"name":"forceUpdate","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}},{"name":"translations","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":""},{"name":"setTranslatedStatus","args":[{"name":"status","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"extends":["TranslateDirective"],"implements":["AfterViewInit","OnDestroy","OnChanges"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"element","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"_ref","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":57,"jsdoctags":[{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"element","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_ref","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}