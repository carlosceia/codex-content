{"name":"WidgetDataType","id":"interface-WidgetDataType-f021e5efc3e3c629feb87d919fa57286da9319e149c01e1883d5943e374a736a3077b26ea60711480d6ca995e965842a72e32373f4b77da5ed7cca4ebfd23fc5","file":"core/dynamic-component/dynamic-component.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","properties":[{"name":"displaySettings","deprecated":false,"deprecationMessage":"","type":"WidgetDisplaySettingsCore","indexKey":"","optional":true,"description":"<p>Settings that define the context to which the widget is bound.\nE.g. global time context, global realtime context, global aggregation context.</p>\n","line":214,"rawdescription":"\n\nSettings that define the context to which the widget is bound.\nE.g. global time context, global realtime context, global aggregation context.\n"},{"name":"export","deprecated":false,"deprecationMessage":"","type":"function","indexKey":"","optional":true,"description":"<p>Method to export the widget configuration during dashboard export to a json file. It enhances the configuration with\nadditional data that can be used later by the <code>import</code> method to restore the widget configuration in a new context.</p>\n","line":236,"rawdescription":"\n\nMethod to export the widget configuration during dashboard export to a json file. It enhances the configuration with\nadditional data that can be used later by the `import` method to restore the widget configuration in a new context.\n","jsdoctags":[{"pos":8017,"end":8057,"kind":341,"id":0,"flags":16777216,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":8018,"end":8023,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>Widget configuration</p>\n","name":{"pos":8024,"end":8030,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"config"},"isNameFirst":true,"isBracketed":false},{"pos":8057,"end":8098,"kind":342,"id":0,"flags":16777216,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":8058,"end":8064,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"return"},"comment":"<p>Enhanced widget configuration</p>\n"}]},{"name":"import","deprecated":false,"deprecationMessage":"","type":"function","indexKey":"","optional":true,"description":"<p>Method to import the widget configuration during dashboard import from a json file. It restores the widget configuration\nwith data exported by the <code>export</code> method.</p>\n","line":243,"rawdescription":"\n\nMethod to import the widget configuration during dashboard import from a json file. It restores the widget configuration\nwith data exported by the `export` method.\n","jsdoctags":[{"pos":8334,"end":8402,"kind":341,"id":0,"flags":16777216,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":8335,"end":8340,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>Widget configuration enhanced with export method</p>\n","name":{"pos":8341,"end":8347,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"config"},"isNameFirst":true,"isBracketed":false},{"pos":8402,"end":8443,"kind":342,"id":0,"flags":16777216,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":8403,"end":8409,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"return"},"comment":"<p>Restored widget configuration</p>\n"}]},{"name":"schema","deprecated":false,"deprecationMessage":"","type":"function","indexKey":"","optional":true,"description":"<p>Callback to get the schema for the widget e.g. for widget config JSON validation purposes in runtime.\nIn order to use this feature, schema should contain <code>c8y-schema-loader</code> prefix, interface name as param\nand path to file where interface is defined to match &quot;c8y-schema-loader?interfaceName=<interface name>!<path to file>&quot;.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">// schema: () =&gt; import(&#39;c8y-schema-loader?interfaceName=KpiWidgetConfig!&#64;c8y/ngx-components/widgets/implementations/kpi&#39;)</code></pre></div><p>Schema will be generated in build process and will be available in runtime.</p>\n","line":229,"rawdescription":"\n\nCallback to get the schema for the widget e.g. for widget config JSON validation purposes in runtime.\nIn order to use this feature, schema should contain `c8y-schema-loader` prefix, interface name as param\nand path to file where interface is defined to match \"c8y-schema-loader?interfaceName=<interface name>!<path to file>\".\n```ts\n// schema: () => import('c8y-schema-loader?interfaceName=KpiWidgetConfig!@c8y/ngx-components/widgets/implementations/kpi')\n```\nSchema will be generated in build process and will be available in runtime.\n"},{"name":"settings","deprecated":false,"deprecationMessage":"","type":"WidgetSettings","indexKey":"","optional":true,"description":"<p>Settings that are used to configure the widget.\nThey are static and will not be saved.</p>\n","line":219,"rawdescription":"\n\nSettings that are used to configure the widget.\nThey are static and will not be saved.\n"}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}