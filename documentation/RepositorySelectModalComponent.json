{"name":"RepositorySelectModalComponent","id":"component-RepositorySelectModalComponent-6606d2dd04b23662b3f3fe25bd0f658e9954ed62aa33dcd7c66a4fabdc1f779891ce266a109a9c4f0b31d97e335c9630397afe57715fe36a778ca34a73b4dabe","file":"repository/shared/select-modal/repository-select-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\n    provide: PRODUCT_EXPERIENCE_EVENT_SOURCE, useExisting: forwardRef(() => RepositorySelectModalComponent)\n}","type":"component"}],"selector":"c8y-repository-select-modal","styleUrls":[],"styles":[],"templateUrl":["./repository-select-modal.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"additionalFilterTemplate","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide additional template that will be rendered in the\nfilters block on top of the results list in the select modal.</p>\n","line":240,"rawdescription":"\n\nOptional\nAllows to provide additional template that will be rendered in the\nfilters block on top of the results list in the select modal.\n"},{"name":"areMoreEntries","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Optional\nAllows to show a warning that the search criteria should be narrowed down.\nBy default, this warning is hidden.</p>\n","line":158,"rawdescription":"\n\nOptional\nAllows to show a warning that the search criteria should be narrowed down.\nBy default, this warning is hidden.\n"},{"name":"badgeTemplates","defaultValue":"{ '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') }","deprecated":false,"deprecationMessage":"","type":"object","indexKey":"","optional":false,"description":"<p>Optional\nAllows to use custom badges templates.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">import { gettext } from &#39;&#64;c8y/ngx-components&#39;;\n\nconst badgeTemplates = { &#39;=1&#39;: gettext(&#39;{{count}} version&#39;), other: gettext(&#39;{{count}} versions&#39;) };\nconst initialState = { badgeTemplates };</code></pre></div>","line":102,"rawdescription":"\n\nOptional\nAllows to use custom badges templates.\n```typescript\nimport { gettext } from '@c8y/ngx-components';\n\nconst badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\nconst initialState = { badgeTemplates };\n```\n"},{"name":"deviceTypeQuery","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide device type query to restrict search criteria.\nOnly takes effect when repositoryEntriesWithVersions$ is not provided,\notherwise modal&#39;s caller have to provide already filtered data in the repositoryEntriesWithVersions$.</p>\n","line":134,"rawdescription":"\n\nOptional\nAllows to provide device type query to restrict search criteria.\nOnly takes effect when repositoryEntriesWithVersions$ is not provided,\notherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n"},{"name":"disableSelected","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Allows to block selection of the other versions from the same repository entry.</p>\n","line":195,"rawdescription":"\n\nAllows to block selection of the other versions from the same repository entry.\n"},{"name":"filterCriteria","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"FilterCriteria","indexKey":"","optional":false,"description":"","line":201},{"name":"hideEmptyItems","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"<p>Allows to hide items that have no options available.</p>\n","line":199,"rawdescription":"\n\nAllows to hide items that have no options available.\n"},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>Optional\nAllows to use custom icon in the modal header.</p>\n","line":191,"rawdescription":"\n\nOptional\nAllows to use custom icon in the modal header.\n"},{"name":"labels","defaultValue":"{ ok: gettext('Save') }","deprecated":false,"deprecationMessage":"","type":"ModalLabels","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.</p>\n","line":146,"rawdescription":"\n\nOptional\nAllows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.\n"},{"name":"load","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","indexKey":"","optional":false,"description":"<p>Loads the content of the modal.\nMust be invoked by the modal&#39;s caller.</p>\n","line":117,"rawdescription":"\n\nLoads the content of the modal.\nMust be invoked by the modal's caller.\n"},{"name":"modalEntries","defaultValue":"merge(\n    this.repositoryEntries$,\n    this.updateInstallableList$.pipe(\n      map((updateItemEvent: IUpdateItemEvent<any>) => {\n        const itemToUpdate: ISelectModalObject = (this.repositoryEntries || []).find(\n          item => item.groupId === updateItemEvent.object.groupId\n        );\n        if (itemToUpdate) {\n          const optionToUpdate: ISelectModalOption = (itemToUpdate.options || []).find(\n            option => option.obj.id === (updateItemEvent.object as any).selectedId\n          );\n          if (optionToUpdate) {\n            optionToUpdate.template = updateItemEvent.template;\n            if (updateItemEvent.mapper) {\n              optionToUpdate.obj = updateItemEvent.mapper(optionToUpdate.obj);\n            }\n          }\n        }\n        return this.repositoryEntries;\n      })\n    )\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<ISelectModalObject[]>","indexKey":"","optional":false,"description":"","line":212},{"name":"mode","defaultValue":"ModalSelectionMode.SINGLE","deprecated":false,"deprecationMessage":"","type":"ModalSelectionMode","indexKey":"","optional":false,"description":"<p>Optional\nAllows to change selection mode.\nSupported options:</p>\n<ul>\n<li>single: only single option can be selected.</li>\n<li>multiple: multiple options can be selected.</li>\n</ul>\n","line":186,"rawdescription":"\n\nOptional\nAllows to change selection mode.\nSupported options:\n  * single: only single option can be selected.\n  * multiple: multiple options can be selected.\n"},{"name":"noItemsMessage","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>Optional\nAllows to display a more specific than the default message in case there are no items to display.</p>\n","line":163,"rawdescription":"\n\nOptional\nAllows to display a more specific than the default message in case there are no items to display.\n"},{"name":"onChoiceUpdated","defaultValue":"new EventEmitter<ISelectModalObject>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<ISelectModalObject>","indexKey":"","optional":false,"description":"<p>Emits whenever a new repository binary have been selected in the modal.</p>\n","line":172,"rawdescription":"\n\nEmits whenever a new repository binary have been selected in the modal.\n"},{"name":"PRODUCT_EXPERIENCE","defaultValue":"PRODUCT_EXPERIENCE_REPOSITORY_SHARED","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":74},{"name":"productExperienceEvent","deprecated":false,"deprecationMessage":"","type":"ProductExperienceEvent","indexKey":"","optional":false,"description":"","line":242},{"name":"repositoryEntries$","defaultValue":"this.load.pipe(\n    switchMap(() => this.repositoryEntriesWithVersions$),\n    mergeMap(mos => this.aggregate(mos)),\n    tap(items => {\n      this.areMoreEntries = items.length >= this.PAGE_SIZE ? true : false;\n    }),\n    tap(items => (this.repositoryEntries = items))\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<ISelectModalObject[]>","indexKey":"","optional":false,"description":"","line":203},{"name":"repositoryEntriesWithVersions$","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"Observable<IManagedObject[]>","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide custom data.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">import { from } from &#39;rxjs&#39;;\n\nconst repositoryEntry = { name: &#39;ExampleEntry&#39;, type: &#39;c8y_Firmware&#39; };\nconst versions = [{ c8y_Firmware: { version: &#39;1.0.0&#39;, url: &#39;http://example.com&#39; } }];\n\nconst initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};</code></pre></div>","line":87,"rawdescription":"\n\nOptional\nAllows to provide custom data.\n```typescript\nimport { from } from 'rxjs';\n\nconst repositoryEntry = { name: 'ExampleEntry', type: 'c8y_Firmware' };\nconst versions = [{ c8y_Firmware: { version: '1.0.0', url: 'http://example.com' } }];\n\nconst initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};\n```\n"},{"name":"repositoryType","deprecated":false,"deprecationMessage":"","type":"RepositoryType.FIRMWARE | RepositoryType.SOFTWARE","indexKey":"","optional":false,"description":"<p>Repository entry type.</p>\n","line":91,"rawdescription":"\n\nRepository entry type.\n"},{"name":"resultEmitter","defaultValue":"new EventEmitter<\n    SelectedRepositoryBinary[]\n  >()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<SelectedRepositoryBinary[]>","indexKey":"","optional":false,"description":"<p>Emits the list of selected options.</p>\n","line":176,"rawdescription":"\n\nEmits the list of selected options.\n"},{"name":"searchQuery","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide query to restrict search criteria.\nOnly takes effect when repositoryEntriesWithVersions$ is not provided,\notherwise modal&#39;s caller have to provide already filtered data in the repositoryEntriesWithVersions$.</p>\n","line":141,"rawdescription":"\n\nOptional\nAllows to provide query to restrict search criteria.\nOnly takes effect when repositoryEntriesWithVersions$ is not provided,\notherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n"},{"name":"searchTerm","defaultValue":"new BehaviorSubject({})","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<FilterCriteria>","indexKey":"","optional":false,"description":"<p>Optional\nEmits a filter criteria object currently entered in the filter input.\nUse it to filter the items if you use custom repositoryEntriesWithVersions$.</p>\n","line":127,"rawdescription":"\n\nOptional\nEmits a filter criteria object currently entered in the filter input.\nUse it to filter the items if you use custom repositoryEntriesWithVersions$.\n"},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"SelectedRepositoryBinary[]","indexKey":"","optional":false,"description":"<p>Optional\nAllows to pass the array of items. Each item from this array will be marked as selected in the modal.</p>\n","line":168,"rawdescription":"\n\nOptional\nAllows to pass the array of items. Each item from this array will be marked as selected in the modal.\n"},{"name":"showFilter","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Optional\nAllows to hide the name filter input field.\nBy default, the filter input field is displayed.</p>\n","line":152,"rawdescription":"\n\nOptional\nAllows to hide the name filter input field.\nBy default, the filter input field is displayed.\n"},{"name":"subTitle","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide custom modal subtitle.</p>\n","line":112,"rawdescription":"\n\nOptional\nAllows to provide custom modal subtitle.\n"},{"name":"title","defaultValue":"gettext('Select repository entry')","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>Optional\nAllows to provide custom modal title.</p>\n","line":107,"rawdescription":"\n\nOptional\nAllows to provide custom modal title.\n"},{"name":"updateInstallableList$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<IUpdateItemEvent<any>>","indexKey":"","optional":false,"description":"<p>Triggers an update of the item list emitted.</p>\n","line":121,"rawdescription":"\n\nTriggers an update of the item list emitted.\n"}],"methodsClass":[{"name":"aggregate","args":[{"name":"mos","type":"IManagedObject[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<ISelectModalObject[]>","typeParameters":[],"line":306,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"mos","type":"IManagedObject[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAndAssignRepositoryBinaries","args":[{"name":"mos","type":"IManagedObject[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":279,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mos","type":"IManagedObject[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSelectModalObject","args":[{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":""},{"name":"options","type":"ISelectModalOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ISelectModalObject","typeParameters":[],"line":388,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"ISelectModalOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSelectModalOptions","args":[{"name":"versions","type":"RepositoryBinary[]","deprecated":false,"deprecationMessage":""},{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":""},{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":""},{"name":"repositoryType","type":"RepositoryType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ISelectModalOption[]","typeParameters":[],"line":328,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"versions","type":"RepositoryBinary[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"repositoryType","type":"RepositoryType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isBinaryRepositorySelected","args":[{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":""},{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":""},{"name":"repositoryBinary","type":"RepositoryBinary","deprecated":false,"deprecationMessage":""},{"name":"repositoryType","type":"RepositoryType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":371,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"repositoryEntry","type":"RepositoryCategory","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"repositoryBinary","type":"RepositoryBinary","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"repositoryType","type":"RepositoryType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":255,"deprecated":false,"deprecationMessage":""},{"name":"result","args":[{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":302,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedItems","type":"SelectedRepositoryBinary[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"search","args":[{"name":"filterCriteria","type":"FilterCriteria","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"filterCriteria","type":"FilterCriteria","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"<p>RepositorySelectModalComponent displays repository entries options and allows to select them.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">import { take } from &#39;rxjs/operators&#39;;\nimport { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from &#39;&#64;c8y/ngx-components/repository/shared&#39;;\n\nconst initialState = {\n  repositoryType: RepositoryType.FIRMWARE,\n  title: gettext(&#39;Install firmware&#39;),\n  subTitle: gettext(&#39;Available firmwares matching the device type&#39;),\n  icon: &#39;c8y-firmware&#39;,\n  mode: ModalSelectionMode.SINGLE,\n  labels: { ok: gettext(&#39;Install&#39;) },\n  disableSelected: false\n};\n\nconst modal = this.bsModal.show(RepositorySelectModalComponent, {\n  ignoreBackdropClick: true,\n  initialState\n});\n\nmodal.content.load.next();\nmodal.content.resultEmitter.pipe(take(1)).subscribe((firmware) =&gt; {\n})</code></pre></div>","rawdescription":"\n\nRepositorySelectModalComponent displays repository entries options and allows to select them.\n\n```typescript\nimport { take } from 'rxjs/operators';\nimport { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from '@c8y/ngx-components/repository/shared';\n\nconst initialState = {\n  repositoryType: RepositoryType.FIRMWARE,\n  title: gettext('Install firmware'),\n  subTitle: gettext('Available firmwares matching the device type'),\n  icon: 'c8y-firmware',\n  mode: ModalSelectionMode.SINGLE,\n  labels: { ok: gettext('Install') },\n  disableSelected: false\n};\n\nconst modal = this.bsModal.show(RepositorySelectModalComponent, {\n  ignoreBackdropClick: true,\n  initialState\n});\n\nmodal.content.load.next();\nmodal.content.resultEmitter.pipe(take(1)).subscribe((firmware) => {\n})\n```\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"repositoryService","type":"RepositoryService","deprecated":false,"deprecationMessage":""},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":246,"jsdoctags":[{"name":"repositoryService","type":"RepositoryService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["ProductExperienceEventSource"]}