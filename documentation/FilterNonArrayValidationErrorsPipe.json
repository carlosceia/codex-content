{"name":"FilterNonArrayValidationErrorsPipe","id":"pipe-FilterNonArrayValidationErrorsPipe-e41ab1a0d75702e8a5680d221ccf69814fc02c51d5e930fdd4cd8bf8c4bdbc0b6c04184d5bd0e8c3ccd24c2fe13fcdd4856ec3a06d6237831cc125a2530bd5b5","file":"core/forms/filter-non-array-validation-errors.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"<p>This pipe should be used in case when there might be generic Array validators, that could populate error object\nwith errors that are directly related to array elements. Such errors should be handled separately, but there still\nmight be errors that applies to whole array. This allows to filter out entry-specific messages from error object.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">errors = {\n &quot;INNER_ARRAY_ERROR_minlength&quot;: {\n   isArrayError: true,\n   originalKey: &quot;minlength&quot;,\n   entries: [\n   {\n     index: 0,\n     errorData: {\n       requiredLength: 5,\n       actualLength: 4\n     }\n   },\n   {\n     index: 2,\n     errorData: {\n       requiredLength: 5,\n       actualLength: 3\n     }\n   },\n   ]\n },\n &quot;minlength&quot;: {\n   requiredLength: 5,\n   actualLength: 3\n }\n}</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;small *ngFor=&quot;let error of errors | filterNonArrayValidationErrors | keyvalue&quot;&gt;\n {{error.key | humanizeValidationMessage | translate: error.value}}\n&lt;/small&gt;</code></pre></div><p>Above code renders only these error messages that are not generated by Array entries.</p>\n","rawdescription":"\n\nThis pipe should be used in case when there might be generic Array validators, that could populate error object\nwith errors that are directly related to array elements. Such errors should be handled separately, but there still\nmight be errors that applies to whole array. This allows to filter out entry-specific messages from error object.\n\n```ts\nerrors = {\n \"INNER_ARRAY_ERROR_minlength\": {\n   isArrayError: true,\n   originalKey: \"minlength\",\n   entries: [\n   {\n     index: 0,\n     errorData: {\n       requiredLength: 5,\n       actualLength: 4\n     }\n   },\n   {\n     index: 2,\n     errorData: {\n       requiredLength: 5,\n       actualLength: 3\n     }\n   },\n   ]\n },\n \"minlength\": {\n   requiredLength: 5,\n   actualLength: 3\n }\n}\n```\n\n```html\n<small *ngFor=\"let error of errors | filterNonArrayValidationErrors | keyvalue\">\n {{error.key | humanizeValidationMessage | translate: error.value}}\n</small>\n```\n\nAbove code renders only these error messages that are not generated by Array entries.\n\n","properties":[],"methods":[{"name":"transform","args":[{"name":"validationErrors","type":"ArrayValidationErrors | ValidationErrors","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"validationErrors","type":"ArrayValidationErrors | ValidationErrors","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"standalone":true,"ngname":"filterNonArrayValidationErrors"}