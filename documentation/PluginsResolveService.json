{"name":"PluginsResolveService","id":"injectable-PluginsResolveService-18cc382431fee6e0a9a668b197f9bd4b634ff4f775b5b98593b71e52e7d286380d615c2c906568957dbe12e02c740bed6db11a6cb53a608b2c18eb0e5a5a40a1","file":"core/plugins/plugins-resolve.service.ts","properties":[{"name":"_contextPathsFromWhereRemotesHaveBeenLoaded$","defaultValue":"new BehaviorSubject<string[]>([])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32},{"name":"_injectors$","defaultValue":"new ReplaySubject<EnvironmentInjector | Injector>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34},{"name":"_loadedPluginNames$","defaultValue":"new BehaviorSubject<string[]>([])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33},{"name":"_pluginDetails$","defaultValue":"new ReplaySubject<{\n    remoteNgModule: NgModuleRef<unknown> | Type<unknown>;\n    moduleRef: NgModuleRef<unknown>;\n  }>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35},{"name":"allPluginsLoaded$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":24},{"name":"contextPathsFromWhereRemotesHaveBeenLoaded$","deprecated":false,"deprecationMessage":"","type":"Observable<string[]>","indexKey":"","optional":false,"description":"<p>Emits all contextPaths (including the corresponding version/tag, if provided) that have been already loaded on startup and further any newload loaded.</p>\n","line":29,"rawdescription":"\n\nEmits all contextPaths (including the corresponding version/tag, if provided) that have been already loaded on startup and further any newload loaded.\n"},{"name":"injectors$","deprecated":false,"deprecationMessage":"","type":"Observable<EnvironmentInjector | Injector>","indexKey":"","optional":false,"description":"<p>Emits all injectors of already loaded plugins on subscription.</p>\n","line":12,"rawdescription":"\n\nEmits all injectors of already loaded plugins on subscription.\n"},{"name":"loadedPluginNames$","deprecated":false,"deprecationMessage":"","type":"Observable<string[]>","indexKey":"","optional":false,"description":"","line":25},{"name":"pluginDetails$","deprecated":false,"deprecationMessage":"","type":"Observable<literal type>","indexKey":"","optional":false,"description":"<p>Emits all plugin details of already loaded plugins on subscription.</p>\n","line":20,"rawdescription":"\n\nEmits all plugin details of already loaded plugins on subscription.\n"},{"name":"refresh$","deprecated":false,"deprecationMessage":"","type":"Observable<void>","indexKey":"","optional":false,"description":"<p>Emits once remotePlugins have been resolved.</p>\n","line":16,"rawdescription":"\n\nEmits once remotePlugins have been resolved.\n"}],"methods":[{"name":"markPluginsAsLoaded","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":""},{"name":"refreshHooks","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nWill refresh all current registered hooks.\n","description":"<p>Will refresh all current registered hooks.</p>\n"}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":38},"extends":[],"type":"injectable"}