{"name":"EmailsValidatorDirective","id":"directive-EmailsValidatorDirective-0d61f1a9032de7e92bcee57d694e066e7e7628f6cf930af36813b18a3738718110e20369dbe653e215cfcee9583dacba07f69622a17a18a301d59aaffe2de890","file":"core/forms/emails-validator.directive.ts","type":"directive","description":"<p>A directive that adds the <code>emails</code> validator to controls marked with the\n<code>emails</code> attribute. The directive is provided with the <code>NG_VALIDATORS</code> multi-provider list.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;input type=&quot;text&quot; name=&quot;emails&quot; ngModel emails&gt;\n&lt;input type=&quot;text&quot; name=&quot;emails&quot; ngModel emails=&quot;true&quot;&gt;\n&lt;input type=&quot;text&quot; name=&quot;emails&quot; ngModel [emails]=&quot;true&quot;&gt;</code></pre></div>","rawdescription":"\n\nA directive that adds the `emails` validator to controls marked with the\n`emails` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n\n```html\n<input type=\"text\" name=\"emails\" ngModel emails>\n<input type=\"text\" name=\"emails\" ngModel emails=\"true\">\n<input type=\"text\" name=\"emails\" ngModel [emails]=\"true\">\n```\n","selector":"[emails][formControlName],[emails][formControl],[emails][ngModel]","providers":[{"name":"{ provide: NG_VALIDATORS, useExisting: EmailsValidatorDirective, multi: true }","type":"directive"}],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"emails","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nTracks changes to the emails attribute bound to this directive.\n","description":"<p>Tracks changes to the emails attribute bound to this directive.</p>\n","line":35,"type":"boolean | string","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"registerOnValidatorChange","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRegisters a callback function to call when the validator inputs change.\n","description":"<p>Registers a callback function to call when the validator inputs change.</p>\n","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"text":"param"}}]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nMethod that validates whether email addresses are valid.\nReturns the validation result if enabled, otherwise null.\n","description":"<p>Method that validates whether email addresses are valid.\nReturns the validation result if enabled, otherwise null.</p>\n","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"extends":[],"implements":["Validator"],"accessors":{"emails":{"name":"emails","setSignature":{"name":"emails","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean | string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"rawdescription":"\n\nTracks changes to the emails attribute bound to this directive.\n","description":"<p>Tracks changes to the emails attribute bound to this directive.</p>\n","jsdoctags":[{"name":"value","type":"boolean | string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}}