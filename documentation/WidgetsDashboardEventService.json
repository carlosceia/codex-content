{"name":"WidgetsDashboardEventService","id":"injectable-WidgetsDashboardEventService-e5370d5c9364aa24cb5e94627f2cb63df213208bbfe78e056491833aa300deed79e98d7e8143941479e49a21c502501e01cdac550b3d7f9e416c78c25090c6ff","file":"core/dashboard/widgets-dashboard-event.service.ts","properties":[],"methods":[{"name":"emit","args":[{"name":"event","type":"WidgetChangeEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEmits a new event.\n","description":"<p>Emits a new event.</p>\n","jsdoctags":[{"name":{"pos":1578,"end":1583,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"event"},"type":"WidgetChangeEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":1572,"end":1577,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The WidgetChangeEvent to emit.</p>\n"}]},{"name":"getLastValue","args":[{"name":"eventType","type":"WidgetChangeEventType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Partial<Record<WidgetChangeEventType, WidgetChangeEvent>>","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns the last value of the event.\n","description":"<p>Returns the last value of the event.</p>\n","jsdoctags":[{"name":{"pos":1284,"end":1293,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"eventType"},"type":"WidgetChangeEventType","deprecated":false,"deprecationMessage":"","tagName":{"pos":1278,"end":1283,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The change event type you want the last value from.</p>\n"},{"tagName":{"pos":1352,"end":1359,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The last value used by this event, undefined if non was sent so far.</p>\n"}]},{"name":"getObservable","args":[{"name":"eventType","type":"WidgetChangeEventType","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<>","typeParameters":["T"],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns a subscribable event observable of specific event type if eventType is passed, or observable of\nall the events if no param is passed to method.\n","description":"<p>Returns a subscribable event observable of specific event type if eventType is passed, or observable of\nall the events if no param is passed to method.</p>\n","jsdoctags":[{"name":{"pos":865,"end":874,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"eventType"},"type":"WidgetChangeEventType","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":859,"end":864,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The event you want an observable for.</p>\n"},{"tagName":{"pos":919,"end":926,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An observable of event.</p>\n"}]},{"name":"setRealtimeTimeContextSetting","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>A service which can be used, to emit data on a dashboard level.\nEach Widget Dashboard gets an own instance of this service provided\nand you can then update all or only one.</p>\n","rawdescription":"\n\nA service which can be used, to emit data on a dashboard level.\nEach Widget Dashboard gets an own instance of this service provided\nand you can then update all or only one.\n","extends":[],"type":"injectable"}