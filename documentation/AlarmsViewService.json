{"name":"AlarmsViewService","id":"injectable-AlarmsViewService-41b2a1e6f02707323940fb5a7aa8d452ae2e4ed8de038ab4f6707f3b4a5c68cf3503d1dcc529903268cf5ceba001ee775a934976d4342b810d315ff2883e92e1","file":"alarms/alarms-view.service.ts","properties":[{"name":"ALARM_REFRESH_TYPE_KEY","defaultValue":"'alarmsRefreshType'","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148]},{"name":"closeDetailsView$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":50},{"name":"DEFAULT_INTERVAL_VALUE","defaultValue":"30_000","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[148]},{"name":"DEFAULT_INTERVAL_VALUES","defaultValue":"[5_000, 10_000, 15_000, 30_000, 60_000]","deprecated":false,"deprecationMessage":"","type":"[]","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148]},{"name":"DEFAULT_REFRESH_OPTION_VALUE","defaultValue":"'interval'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148]},{"name":"isIntervalEnabled$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":48},{"name":"REALTIME_UPDATE_ALARMS_MESSAGE","defaultValue":"gettext('The list was updated, click to refresh.')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"reloadAlarmsList$","defaultValue":"new Subject<ReloadAlarmsListType>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49}],"methods":[{"name":"clearAllActiveAlarms","args":[{"name":"selectedSeverities","type":"SeverityType[]","deprecated":false,"deprecationMessage":""},{"name":"sourceId","type":"string | number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<literal type>","typeParameters":[],"line":204,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nClears all active alarms of the selected severities.\n\nThis method clears all active alarms for the given list of severities by making bulk update calls. If no severities are selected, it defaults to using all available severities.\nIt works by sending a series of update requests for each severity and returns a Promise that resolves with an object indicating if all alarms were resolved immediately.\n\n\n\n**Example**\n```typescript\nconst severitiesToClear: SeverityType[] = [Severity.MAJOR, Severity.MINOR];\n\nclearAllActiveAlarms(severitiesToClear).then(({ resolvedImmediately }) => {\n  if (resolvedImmediately) {\n    console.log('All selected alarms were cleared successfully.');\n  } else {\n    console.log('Some alarms could not be cleared.');\n  }\n});\n```\n\n**Note**\n- The method uses the `alarmService.updateBulk` for each severity to clear the active alarms.\n- It may fetch the `sourceId` based on the view (if applicable) and include it as a query parameter in the update calls.\n- The method returns immediately but the returned Promise needs to have a `then` or `catch` method call to handle the result or error respectively.\n- Uses `Promise.all` to wait for all update requests to complete before resolving the final result.\n","description":"<p>Clears all active alarms of the selected severities.</p>\n<p>This method clears all active alarms for the given list of severities by making bulk update calls. If no severities are selected, it defaults to using all available severities.\nIt works by sending a series of update requests for each severity and returns a Promise that resolves with an object indicating if all alarms were resolved immediately.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">const severitiesToClear: SeverityType[] = [Severity.MAJOR, Severity.MINOR];\n\nclearAllActiveAlarms(severitiesToClear).then(({ resolvedImmediately }) =&gt; {\n  if (resolvedImmediately) {\n    console.log(&#39;All selected alarms were cleared successfully.&#39;);\n  } else {\n    console.log(&#39;Some alarms could not be cleared.&#39;);\n  }\n});</code></pre></div><p><strong>Note</strong></p>\n<ul>\n<li>The method uses the <code>alarmService.updateBulk</code> for each severity to clear the active alarms.</li>\n<li>It may fetch the <code>sourceId</code> based on the view (if applicable) and include it as a query parameter in the update calls.</li>\n<li>The method returns immediately but the returned Promise needs to have a <code>then</code> or <code>catch</code> method call to handle the result or error respectively.</li>\n<li>Uses <code>Promise.all</code> to wait for all update requests to complete before resolving the final result.</li>\n</ul>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":6336,"end":6354,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"selectedSeverities"},"type":"SeverityType[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":6330,"end":6335,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>An array of severities to be cleared. If not provided, all severities will be cleared.</p>\n"},{"name":{"pos":6454,"end":6462,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"sourceId"},"type":"string | number","deprecated":false,"deprecationMessage":"","tagName":{"pos":6448,"end":6453,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Identifier for the source associated with the alarms to be cleared.</li>\n</ul>\n"},{"tagName":{"pos":6544,"end":6551,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A Promise that resolves with an object with a flag <code>resolvedImmediately</code>. The flag is true if all alarms for all selected severities were cleared successfully; otherwise false.</p>\n<p><strong>Example</strong></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\">const severitiesToClear: SeverityType[] = [Severity.MAJOR, Severity.MINOR];\n\nclearAllActiveAlarms(severitiesToClear).then(({ resolvedImmediately }) =&gt; {\nif (resolvedImmediately) {\nconsole.log(&#39;All selected alarms were cleared successfully.&#39;);\n} else {\nconsole.log(&#39;Some alarms could not be cleared.&#39;);\n}\n});</code></pre></div><p><strong>Note</strong></p>\n<ul>\n<li>The method uses the <code>alarmService.updateBulk</code> for each severity to clear the active alarms.</li>\n<li>It may fetch the <code>sourceId</code> based on the view (if applicable) and include it as a query parameter in the update calls.</li>\n<li>The method returns immediately but the returned Promise needs to have a <code>then</code> or <code>catch</code> method call to handle the result or error respectively.</li>\n<li>Uses <code>Promise.all</code> to wait for all update requests to complete before resolving the final result.</li>\n</ul>\n"}]},{"name":"closeDetailsView","args":[{"name":"activatedRoute","type":"ActivatedRoute | ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":272,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nCloses the details view and navigates based on the current route context,\npreserving existing query parameters.\n","description":"<p>Closes the details view and navigates based on the current route context,\npreserving existing query parameters.</p>\n","modifierKind":[134],"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute | ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"convertSecondsToTime","args":[{"name":"totalSeconds","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nConverts a given number of seconds into a formatted string representing hours, minutes, and seconds.\n\n","description":"<p>Converts a given number of seconds into a formatted string representing hours, minutes, and seconds.</p>\n","jsdoctags":[{"name":{"pos":10773,"end":10785,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"totalSeconds"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":10767,"end":10772,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The total number of seconds to convert.</li>\n</ul>\n"},{"tagName":{"pos":10834,"end":10841,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A string in the format &quot;HH:MM:SS&quot;, where HH is hours, MM is minutes, and SS is seconds.</p>\n"}]},{"name":"getAlarmsCountBySeverity","args":[{"name":"severity","type":"SeverityType","deprecated":false,"deprecationMessage":""},{"name":"showCleared","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"filter","type":"AlarmQueryFilter","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Promise<number>","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nFetches the count of alarms filtered by severity and clearance status.\n\n\n\n","description":"<p>Fetches the count of alarms filtered by severity and clearance status.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":4238,"end":4246,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"severity"},"type":"SeverityType","deprecated":false,"deprecationMessage":"","tagName":{"pos":4232,"end":4237,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The severity level to filter by (e.g., CRITICAL, MAJOR, etc.).</li>\n</ul>\n"},{"name":{"pos":4324,"end":4335,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"showCleared"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":4318,"end":4323,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Whether or not to include cleared alarms in the count.</li>\n</ul>\n"},{"name":{"pos":4405,"end":4411,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"filter"},"type":"AlarmQueryFilter","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":4399,"end":4404,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>Additional filter criteria for alarms.</li>\n</ul>\n"},{"tagName":{"pos":4464,"end":4471,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A promise that resolves to the number of alarms that match the filter criteria.</p>\n"}]},{"name":"getDateTimeContextByInterval","args":[{"name":"intervalId","type":"AlarmFilterInterval","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DateTimeContext","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns the correct from and to dates based on the selected interval\n","description":"<p>Returns the correct from and to dates based on the selected interval</p>\n","jsdoctags":[{"name":{"pos":10286,"end":10296,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"intervalId"},"type":"AlarmFilterInterval","deprecated":false,"deprecationMessage":"","tagName":{"pos":10280,"end":10285,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>the selected interval. E.g. &#39;none&#39;, &#39;hours&#39;, &#39;custom&#39; ...</p>\n"},{"tagName":{"pos":10361,"end":10368,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The calculated date context based on the selected interval.</p>\n"}]},{"name":"getRouterLink","args":[{"name":"contextData","type":"ContextData","deprecated":false,"deprecationMessage":"","optional":true},{"name":"alarm","type":"IAlarm","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":237,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns the correct link based on the provided context data.\n","description":"<p>Returns the correct link based on the provided context data.</p>\n","jsdoctags":[{"name":{"pos":8540,"end":8551,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"contextData"},"type":"ContextData","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":8534,"end":8539,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The context the navigation was triggered from.</p>\n"},{"name":{"pos":8611,"end":8616,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"alarm"},"type":"IAlarm","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":8605,"end":8610,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The alarm to navigate to.</p>\n"},{"tagName":{"pos":8649,"end":8656,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A link to be used as an url navigation.</p>\n"}]},{"name":"getRouterNavigationArray","args":[{"name":"contextData","type":"ContextData","deprecated":false,"deprecationMessage":"","optional":true},{"name":"alarm","type":"IAlarm","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string[]","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nReturns the correct array navigation.\n","description":"<p>Returns the correct array navigation.</p>\n","jsdoctags":[{"name":{"pos":9389,"end":9400,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"contextData"},"type":"ContextData","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":9383,"end":9388,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The context the navigation was triggered from.</p>\n"},{"name":{"pos":9460,"end":9465,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"alarm"},"type":"IAlarm","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":9454,"end":9459,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The alarm to navigate to.</p>\n"},{"tagName":{"pos":9498,"end":9505,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A link to be used as a router.navigation.</p>\n"}]},{"name":"isIntervalRefresh","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRetrieves the current alarms refresh type from the OptionsService\nand determines whether it is set to \"interval\".\n\n","description":"<p>Retrieves the current alarms refresh type from the OptionsService\nand determines whether it is set to &quot;interval&quot;.</p>\n","jsdoctags":[{"tagName":{"pos":5163,"end":5170,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p><code>true</code> if the alarms refresh type is &quot;interval,&quot; otherwise <code>false</code>.</p>\n"}]},{"name":"retrieveAlarmsByDate","args":[{"name":"dates","type":"DateTimeContext","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dates","type":"DateTimeContext","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"retrieveFilteredAlarms","args":[{"name":"severities","type":"SeverityType[]","deprecated":false,"deprecationMessage":""},{"name":"showCleared","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"},{"name":"selectedDates","type":"[Date, Date]","deprecated":false,"deprecationMessage":"","optional":true},{"name":"filter","type":"AlarmQueryFilter","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Promise<IResultList<IAlarm>>","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nRetrieves a list of alarms filtered by specified severities and other optional query filters.\n\n\n","description":"<p>Retrieves a list of alarms filtered by specified severities and other optional query filters.</p>\n","jsdoctags":[{"name":{"pos":2505,"end":2515,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"severities"},"type":"SeverityType[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2499,"end":2504,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>an array of severities to filter the alarms.</p>\n"},{"name":{"pos":2573,"end":2584,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"showCleared"},"type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"pos":2567,"end":2572,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>flag indicating whether to show cleared alarms. Defaults to false.</p>\n"},{"name":{"pos":2664,"end":2677,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"selectedDates"},"type":"[Date, Date]","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2658,"end":2663,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>an array of two dates to filter alarms by creation and last update dates.</p>\n"},{"name":{"pos":2764,"end":2770,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"filter"},"type":"AlarmQueryFilter","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2758,"end":2763,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>additional query filters for retrieving alarms.</p>\n"},{"tagName":{"pos":2830,"end":2837,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>A promise that resolves to a list of alarms satisfying the specified filters.</p>\n"}]},{"name":"updateAlarmList","args":[{"name":"value","type":"ReloadAlarmsListType","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEmits a subject to initialize the alarms reloading.\n","description":"<p>Emits a subject to initialize the alarms reloading.</p>\n","jsdoctags":[{"name":"value","type":"ReloadAlarmsListType","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"updateIntervalState","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates the state to enable or disable intervals.\n","description":"<p>Updates the state to enable or disable intervals.</p>\n","jsdoctags":[{"name":{"pos":3975,"end":3980,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"value"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":3969,"end":3974,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>A boolean value to indicate whether to enable intervals.</li>\n</ul>\n"}]},{"name":"updateSelectedSeverities","args":[{"name":"severityUpdates","type":"SeverityFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SeverityType[]","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates the list of selected severities based on the new severity filter.\n\n\n","description":"<p>Updates the list of selected severities based on the new severity filter.</p>\n","jsdoctags":[{"name":{"pos":5502,"end":5517,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"severityUpdates"},"type":"SeverityFilter","deprecated":false,"deprecationMessage":"","tagName":{"pos":5496,"end":5501,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<ul>\n<li>The object representing the updates to each severity.</li>\n</ul>\n"},{"tagName":{"pos":5585,"end":5592,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An array representing the updated selected severities.</p>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service for managing and retrieving alarms data within the alarms view.</p>\n<p>The <code>AlarmsViewService</code> provides functionality to interact with alarms,\nincluding filtering, counting, and translation-related operations in an alarms view.</p>\n<p>This service relies on the <code>AlarmService</code> for fetching alarm data and the <code>OptionsService</code>\nfor configuring alarms view options.</p>\n","rawdescription":"\n\nService for managing and retrieving alarms data within the alarms view.\n\nThe `AlarmsViewService` provides functionality to interact with alarms,\nincluding filtering, counting, and translation-related operations in an alarms view.\n\nThis service relies on the `AlarmService` for fetching alarm data and the `OptionsService`\nfor configuring alarms view options.\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"alarmService","type":"AlarmService","deprecated":false,"deprecationMessage":""},{"name":"optionsService","type":"OptionsService","deprecated":false,"deprecationMessage":""},{"name":"dateTimeContextPickerService","type":"DateTimeContextPickerService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"contextRouteService","type":"ContextRouteService","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"alarmService","type":"AlarmService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"optionsService","type":"OptionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dateTimeContextPickerService","type":"DateTimeContextPickerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"contextRouteService","type":"ContextRouteService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}