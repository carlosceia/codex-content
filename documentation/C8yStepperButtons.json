{"name":"C8yStepperButtons","id":"component-C8yStepperButtons-15e27827980bdc5b2a0404da7f010f8a81c60ad39610b145ba893e4efea83820d9e5b091c7af4296f0ecb1fc28402419a15e5f81b67232dce6fed348f38ea6c1","file":"core/stepper/stepper-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"c8y-stepper-buttons","styleUrls":[],"styles":[],"templateUrl":["./stepper-buttons.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDisabled state of a button\n","description":"<p>Disabled state of a button</p>\n","line":84,"type":"boolean","decorators":[]},{"name":"labels","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nOptional\nSpecify custom labels for each button (cancel, back or next)\n","description":"<p>Optional\nSpecify custom labels for each button (cancel, back or next)</p>\n","line":73,"type":"literal type","decorators":[]},{"name":"pending","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nOptional\nIndicates if a request is pending and sets the next button\nto disabled when true\n","description":"<p>Optional\nIndicates if a request is pending and sets the next button\nto disabled when true</p>\n","line":79,"type":"boolean","decorators":[]},{"name":"showButtons","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":5112,"end":5183,"kind":341,"id":0,"flags":16842752,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":5113,"end":5118,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>An object that contains options for displaying buttons.</p>\n","name":{"pos":5119,"end":5123,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"btns"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\n\nThis option forces the display of the buttons passed by the input.\nIt will override the default settings and take precedence over the standard settings.\n\n```html\n<c8y-stepper-buttons\n  [labels]=\"{ custom: 'Custom btn', cancel: 'Cancel btn' }\"\n  [showButtons]=\"{ custom: true, cancel: true }\"\n></c8y-stepper-buttons>\n```\n\n","description":"<p>This option forces the display of the buttons passed by the input.\nIt will override the default settings and take precedence over the standard settings.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;c8y-stepper-buttons\n  [labels]=&quot;{ custom: &#39;Custom btn&#39;, cancel: &#39;Cancel btn&#39; }&quot;\n  [showButtons]=&quot;{ custom: true, cancel: true }&quot;\n&gt;&lt;/c8y-stepper-buttons&gt;</code></pre></div>","line":141,"type":"StepperButtonsVisibility","decorators":[]}],"outputsClass":[{"name":"onBack","defaultValue":"new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.\n","description":"<p>EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.</p>\n","line":98,"type":"EventEmitter"},{"name":"onCancel","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEventEmitter which emits when cancel button is clicked\n","description":"<p>EventEmitter which emits when cancel button is clicked</p>\n","line":89,"type":"EventEmitter"},{"name":"onCustom","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEventEmitter which emits when the optional custom button is clicked\n","description":"<p>EventEmitter which emits when the optional custom button is clicked</p>\n","line":103,"type":"EventEmitter"},{"name":"onNext","defaultValue":"new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>()","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.\n","description":"<p>EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.</p>\n","line":93,"type":"EventEmitter"}],"propertiesClass":[{"name":"forceShowBtns","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Flag that indicates that the default settings defined in the showBtns have been overwritten.</p>\n","line":119,"rawdescription":"\n\nFlag that indicates that the default settings defined in the showBtns have been overwritten.\n"},{"name":"showBtns","defaultValue":"{\n    cancel: false,\n    back: false,\n    next: false,\n    custom: false\n  }","deprecated":false,"deprecationMessage":"","type":"StepperButtonsVisibility","indexKey":"","optional":false,"description":"<p>Indicator which button should be shown.\nBased on the cdk-steps within the c8y-stepper\nnext and back buttons are rendered.</p>\n","line":110,"rawdescription":"\n\nIndicator which button should be shown.\nBased on the cdk-steps within the c8y-stepper\nnext and back buttons are rendered.\n"}],"methodsClass":[{"name":"back","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets called when back button is clicked. When onBack EventEmitter has an observer registered\nit will emit the following object {stepper: C8yStepper; step: CdkStep}.\nOtherwise it will call stepper.previous() as default.\n","description":"<p>Gets called when back button is clicked. When onBack EventEmitter has an observer registered\nit will emit the following object {stepper: C8yStepper; step: CdkStep}.\nOtherwise it will call stepper.previous() as default.</p>\n"},{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets called when cancel button is clicked.\nIt will emit immediate.\n","description":"<p>Gets called when cancel button is clicked.\nIt will emit immediate.</p>\n"},{"name":"custom","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":220,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets called when the custom button is clicked.\nIt will emit immediately.\n","description":"<p>Gets called when the custom button is clicked.\nIt will emit immediately.</p>\n"},{"name":"next","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":191,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets called when next button is clicked. When onNext EventEmitter has an observer registered\nit will emit the following object {stepper: C8yStepper; step: CdkStep}.\nOtherwise it will call stepper.next() as default.\n","description":"<p>Gets called when next button is clicked. When onNext EventEmitter has an observer registered\nit will emit the following object {stepper: C8yStepper; step: CdkStep}.\nOtherwise it will call stepper.next() as default.</p>\n"},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"NgIf"},{"name":"NgClass"},{"name":"C8yTranslatePipe","type":"pipe"}],"description":"<p><code>C8yStepperButtons</code> provides a convenient way to have, according to\nthe <code>C8yStepper</code> and each <code>cdk-step</code>, buttons to navigate between steps or to cancel the whole\nstep-process. Buttons rendered with the help of this component will use the branding css.</p>\n<p>By default all steps with this component in use will render a next button, expect the last step.\nThe other way around, every step using this component will render a back button, expect the first step.\nTo get a cancel button rendered you need to handle the onCancel event.\nFor next and back button you don&#39;t need to handle the available events <code>onNext</code> and <code>onBack</code> because default behavior\nis implemented. The default will just call, according to the button, the <code>stepper.next()</code> or <code>stepper.previous()</code>\nmethods and moves the stepper forth or back. Using the <code>EventEmitter</code> <code>onNext</code> and <code>onBack</code> will emit for you the following\nobject: <code>{stepper: C8yStepper, step: CdkStep}</code>. This is useful if you need to implement custom logic before moving\nto the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back\non your own.</p>\n<p>With the component input <code>[labels]</code> you can change the label of each button in each step. It takes an object like this:\n<code>{next?: string, back?: string, cancel?: string}</code></p>\n<p>The <code>[pending]</code> input is of type boolean and will enable css animation for the next button when true.</p>\n<p>If the <code>cdk-step</code> provides a <code>stepControl</code> the component will set the next button disabled when the formGroup\nbehind it is invalid. As long as the <code>[pending]</code> input is true the back and next button is also disabled.\nThis will prevent multiple clicks while running a request or stepping back while a request is ongoing.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;c8y-stepper&gt;\n &lt;cdk-step&gt;\n   &lt;!--\n     your html code\n         ...\n         ...    --&gt;\n   &lt;c8y-stepper-buttons\n    (onNext)=&quot;save()&quot;\n    [labels]=&quot;{ next: &#39;Save&#39; }&quot;\n    [pending]=&quot;pendingStatus&quot;\n    &gt;&lt;/c8y-stepper-buttons&gt;\n &lt;/cdk-step&gt;\n&lt;/c8y-stepper&gt;</code></pre></div><b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-js\">// in your component:\nasync save() {\n  this.pendingStatus = true;\n  // your async request goes here ...\n  // await something();\n  this.pendingStatus = false;\n  this.stepper.next();\n}</code></pre></div>","rawdescription":"\n\n`C8yStepperButtons` provides a convenient way to have, according to\nthe `C8yStepper` and each `cdk-step`, buttons to navigate between steps or to cancel the whole\nstep-process. Buttons rendered with the help of this component will use the branding css.\n\nBy default all steps with this component in use will render a next button, expect the last step.\nThe other way around, every step using this component will render a back button, expect the first step.\nTo get a cancel button rendered you need to handle the onCancel event.\nFor next and back button you don't need to handle the available events `onNext` and `onBack` because default behavior\nis implemented. The default will just call, according to the button, the `stepper.next()` or `stepper.previous()`\nmethods and moves the stepper forth or back. Using the `EventEmitter` `onNext` and `onBack` will emit for you the following\nobject: `{stepper: C8yStepper, step: CdkStep}`. This is useful if you need to implement custom logic before moving\nto the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back\non your own.\n\nWith the component input `[labels]` you can change the label of each button in each step. It takes an object like this:\n`{next?: string, back?: string, cancel?: string}`\n\nThe `[pending]` input is of type boolean and will enable css animation for the next button when true.\n\nIf the `cdk-step` provides a `stepControl` the component will set the next button disabled when the formGroup\nbehind it is invalid. As long as the `[pending]` input is true the back and next button is also disabled.\nThis will prevent multiple clicks while running a request or stepping back while a request is ongoing.\n\n```html\n<c8y-stepper>\n <cdk-step>\n   <!--\n     your html code\n         ...\n         ...    -->\n   <c8y-stepper-buttons\n    (onNext)=\"save()\"\n    [labels]=\"{ next: 'Save' }\"\n    [pending]=\"pendingStatus\"\n    ></c8y-stepper-buttons>\n </cdk-step>\n</c8y-stepper>\n```\n\n```js\n// in your component:\nasync save() {\n  this.pendingStatus = true;\n  // your async request goes here ...\n  // await something();\n  this.pendingStatus = false;\n  this.stepper.next();\n}\n```\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"stepper","type":"C8yStepper","deprecated":false,"deprecationMessage":""},{"name":"step","type":"CdkStep","deprecated":false,"deprecationMessage":""},{"name":"gainsightService","type":"GainsightService","deprecated":false,"deprecationMessage":""}],"line":121,"jsdoctags":[{"name":"stepper","type":"C8yStepper","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"step","type":"CdkStep","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"gainsightService","type":"GainsightService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["AfterContentInit","OnDestroy"],"accessors":{"showButtons":{"name":"showButtons","setSignature":{"name":"showButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"btns","type":"StepperButtonsVisibility","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":141,"rawdescription":"\n\nThis option forces the display of the buttons passed by the input.\nIt will override the default settings and take precedence over the standard settings.\n\n```html\n<c8y-stepper-buttons\n  [labels]=\"{ custom: 'Custom btn', cancel: 'Cancel btn' }\"\n  [showButtons]=\"{ custom: true, cancel: true }\"\n></c8y-stepper-buttons>\n```\n\n","description":"<p>This option forces the display of the buttons passed by the input.\nIt will override the default settings and take precedence over the standard settings.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;c8y-stepper-buttons\n  [labels]=&quot;{ custom: &#39;Custom btn&#39;, cancel: &#39;Cancel btn&#39; }&quot;\n  [showButtons]=&quot;{ custom: true, cancel: true }&quot;\n&gt;&lt;/c8y-stepper-buttons&gt;</code></pre></div>","jsdoctags":[{"name":{"pos":5119,"end":5123,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"btns"},"type":"StepperButtonsVisibility","deprecated":false,"deprecationMessage":"","tagName":{"pos":5113,"end":5118,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>An object that contains options for displaying buttons.</p>\n"}]}}}}