{"name":"AppStateService","id":"injectable-AppStateService-90c7295d85603595ee1df25adfd2bdc151a9e746f49b9a1c474323ff6606d11b37a4a01ddba6ed3c10ede042d1520b7aecc50629a1887c5e7c1659d221094a1e","file":"core/common/ui-state.service.ts","properties":[{"name":"apiService","deprecated":false,"deprecationMessage":"","type":"ApiService","indexKey":"","optional":false,"description":"","line":107,"modifierKind":[125]},{"name":"currentApplication","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IApplication | null>","indexKey":"","optional":false,"description":"","line":93},{"name":"currentApplicationConfig","defaultValue":"this.currentApplication.pipe(\n    filter(app => !!app),\n    map(app => app?.config || null)\n  )","deprecated":false,"deprecationMessage":"","type":"Observable<any>","indexKey":"","optional":false,"description":"","line":94},{"name":"currentAppsOfUser","deprecated":false,"deprecationMessage":"","type":"Observable<IApplication[]>","indexKey":"","optional":false,"description":"<p>An Observable of the applications available for the current user.\nThe Observable emits a new array on user changes or if the application\nperforms POST, PUT or DELETE requests to the application API.</p>\n","line":103,"rawdescription":"\n\nAn Observable of the applications available for the current user.\nThe Observable emits a new array on user changes or if the application\nperforms POST, PUT or DELETE requests to the application API.\n"},{"name":"currentSupportUserName","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string | null>","indexKey":"","optional":false,"description":"","line":90},{"name":"currentTenant","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<ICurrentTenant | null>","indexKey":"","optional":false,"description":"","line":92},{"name":"currentUser","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUser | null>","indexKey":"","optional":false,"description":"","line":91},{"name":"state$","defaultValue":"new BehaviorSubject<any>({\n    supportUrl: this.options.supportUrl,\n    lang: this.options.get('defaultLanguage', 'en'),\n    langs: this.getLangs(),\n    langsDetail: this.options.languages,\n    loginOptions: this.options.loginOptions,\n    activateSupportUserAvailable: undefined,\n    versions: {\n      backend: undefined,\n      ui: this.options.versions || { ngx: undefined }\n    },\n    hidePowered: this.options.hidePowered,\n    isLoading: false,\n    showRightDrawer: this.options.rightDrawer,\n    loginExtraLink: this.options.get('login_extra_link'),\n    newsletter: this.options.newsletter\n  })","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","indexKey":"","optional":false,"description":"<p>Saves the state. Should not be accessible directly. Use map or the getter to access\nthe state. Use functions in the implementation to change the state.</p>\n","line":73,"rawdescription":"\n\nSaves the state. Should not be accessible directly. Use map or the getter to access\nthe state. Use functions in the implementation to change the state.\n","inheritance":{"file":"StateService"}}],"methods":[{"name":"assignApplicationKeyToDefaultHeaders","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":""},{"name":"currentAppsOfUser$","args":[],"optional":false,"returnType":"Observable<IApplication[]>","typeParameters":[],"line":260,"deprecated":false,"deprecationMessage":"","modifierKind":[124]},{"name":"getLangs","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":""},{"name":"isApplicationAvailable","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"unknown","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nChecks current users application list and matches it against given application name.\nReturns true if application is in the list.\n","description":"<p>Checks current users application list and matches it against given application name.\nReturns true if application is in the list.</p>\n","modifierKind":[134],"jsdoctags":[{"name":{"pos":6657,"end":6661,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"name"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6651,"end":6656,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>application name</p>\n"}]},{"name":"isOwnerOfApplication","args":[{"name":"app","type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":227,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nVerifies if the current application is owned by the current tenant.\n","description":"<p>Verifies if the current application is owned by the current tenant.</p>\n","jsdoctags":[{"name":{"pos":7295,"end":7298,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"app"},"type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":7289,"end":7294,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The application to verify.</p>\n"},{"tagName":{"pos":7332,"end":7339,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>true if it belongs to the current tenant.</p>\n"}]},{"name":"isOwnerOfApplication$","args":[{"name":"app","type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":241,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nVerifies if the current application is owned by the current tenant.\n","description":"<p>Verifies if the current application is owned by the current tenant.</p>\n","jsdoctags":[{"name":{"pos":7766,"end":7769,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"app"},"type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":7760,"end":7765,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The application to verify.</p>\n"},{"tagName":{"pos":7803,"end":7810,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>true if it belongs to the current tenant.</p>\n"}]},{"name":"loadDefaultOptions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":253,"deprecated":false,"deprecationMessage":"","modifierKind":[134]},{"name":"onAppChangesCompletion$","args":[],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":282,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAn Observable emitting once all POST, PUT, DELETE requests to the application API finished\n","description":"<p>An Observable emitting once all POST, PUT, DELETE requests to the application API finished</p>\n","modifierKind":[124]},{"name":"refreshLoginOptions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nWhen this function called, it refreshes the values of loginOptions stored within ui state object.\nFunction is throttled to execute the refresh once in a time specified by params of @throttled decorator,\nit should be called on leading edge of the timeout.\n","description":"<p>When this function called, it refreshes the values of loginOptions stored within ui state object.\nFunction is throttled to execute the refresh once in a time specified by params of @throttled decorator,\nit should be called on leading edge of the timeout.</p>\n","decorators":[{"name":"throttle","stringifiedArguments":"600, {trailing: false}"}],"modifierKind":[170,134],"jsdoctags":[]},{"name":"setUser","args":[{"name":"userInfo","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":217,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets current user (including support user).\n","description":"<p>Sets current user (including support user).</p>\n","jsdoctags":[{"name":{"pos":6953,"end":6961,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"userInfo"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":6947,"end":6952,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Info about current user and support user to be set.</p>\n"}]},{"name":"updateCurrentApplicationConfig","args":[{"name":"config","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<T>","typeParameters":["T"],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDynamic options are stored on the API in a specific config: {} object. They can\nbe used to configure the app dynamically.\n\nNote: To avoids conflicts with the default Config, it is recommended\nto use a certain namespace.\n","description":"<p>Dynamic options are stored on the API in a specific config: {} object. They can\nbe used to configure the app dynamically.</p>\n<p>Note: To avoids conflicts with the default Config, it is recommended\nto use a certain namespace.</p>\n","modifierKind":[134],"jsdoctags":[{"name":"config","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"emitNewState","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nEmits a new state.\n","description":"<p>Emits a new state.</p>\n","modifierKind":[124],"inheritance":{"file":"StateService"}},{"name":"map","args":[{"name":"mappedProperty","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"stateProperty","type":"","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nMaps to a property and just returns that property.\n","description":"<p>Maps to a property and just returns that property.</p>\n","jsdoctags":[{"name":{"pos":632,"end":646,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"mappedProperty"},"type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"stateProperty","type":"","deprecated":false,"deprecationMessage":""}],"tagName":{"pos":626,"end":631,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The property to map to.</p>\n"}],"inheritance":{"file":"StateService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"applicationService","type":"ApplicationService","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"options","type":"OptionsService","deprecated":false,"deprecationMessage":""},{"name":"fetchClient","type":"FetchClient","deprecated":false,"deprecationMessage":""},{"name":"tenantLoginOptionsService","type":"TenantLoginOptionsService","deprecated":false,"deprecationMessage":""},{"name":"user","type":"IUser","deprecated":false,"deprecationMessage":"","optional":true},{"name":"application","type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true},{"name":"tenant","type":"ICurrentTenant","deprecated":false,"deprecationMessage":"","optional":true}],"line":103,"jsdoctags":[{"name":"applicationService","type":"ApplicationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"OptionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fetchClient","type":"FetchClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tenantLoginOptionsService","type":"TenantLoginOptionsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"user","type":"IUser","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"application","type":"IApplication","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"tenant","type":"ICurrentTenant","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"accessors":{"state":{"name":"state","getSignature":{"name":"state","type":"","returnType":"","line":159,"rawdescription":"\n\nReturns the current state.\n","description":"<p>Returns the current state.</p>\n"}},"uiVersion":{"name":"uiVersion","getSignature":{"name":"uiVersion","type":"","returnType":"","line":171,"rawdescription":"\n\nReturns the correct UI version. In hybrid mode for angular and ngx.\n","description":"<p>Returns the correct UI version. In hybrid mode for angular and ngx.</p>\n"}}},"extends":["StateService"],"type":"injectable"}