{"name":"FilePickerFormControlComponent","id":"component-FilePickerFormControlComponent-1395d4c5cf63d4f6dabc81b27737d0d575aa048d2f5bd3e732bd39021daf553a130b4c0229f5c1dbc8675401e8c3d198fc9ae5338939d71b0d4526c436f278d2","file":"core/file-picker-form-control/file-picker-form-control.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FilePickerFormControlComponent), multi: true\n}","type":"component"},{"name":"{\n    provide: NG_VALIDATORS, multi: true, useExisting: forwardRef(() => FilePickerFormControlComponent)\n}","type":"component"}],"selector":"c8y-file-picker-form-control","styleUrls":[],"styles":[],"templateUrl":["./file-picker-form-control.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accept","deprecated":false,"deprecationMessage":"","rawdescription":"\nSpecifies a filter for what file types the user can pick from the file input dialog box.\nBy default all types are accepted.\n\nSpecify file types by extensions:\n```html\n ...\n [accept]=\"'.zip,.7z'\"\n ...\n```\n\nSpecify file types by extensions and generic types [GENERIC_FILE_TYPE]{@link GENERIC_FILE_TYPE}:\n```html\n ...\n [accept]=\"'.pdf,archive'\"\n ...\n```\n\nSpecify file types by generic types [GENERIC_FILE_TYPE]{@link GENERIC_FILE_TYPE}:\n ```html\n ...\n [accept]=\"'archive,video'\"\n ...\n\n```\n","description":"<p>Specifies a filter for what file types the user can pick from the file input dialog box.\nBy default all types are accepted.</p>\n<p>Specify file types by extensions:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\"> ...\n [accept]=&quot;&#39;.zip,.7z&#39;&quot;\n ...</code></pre></div><p>Specify file types by extensions and generic types [GENERIC_FILE_TYPE]{@link GENERIC_FILE_TYPE}:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\"> ...\n [accept]=&quot;&#39;.pdf,archive&#39;&quot;\n ...</code></pre></div><p>Specify file types by generic types [GENERIC_FILE_TYPE]{@link GENERIC_FILE_TYPE}:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">...\n[accept]=&quot;&#39;archive,video&#39;&quot;\n...\n</code></pre></div>","line":129,"type":"string","decorators":[]},{"name":"disableValidators","defaultValue":"{}","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nAllows to disable default validators. Accepts object with following optional properties:\n- fileMaxSize - Providing `true` disables default validation for file size, accepts only boolean\n- fileNonEmpty - Providing `true` disables default validation for empty files, accepts only boolean\n- fileNameMaxLength - Providing `true` disables default validation for file name length, accepts only boolean\n","description":"<p>Allows to disable default validators. Accepts object with following optional properties:</p>\n<ul>\n<li>fileMaxSize - Providing <code>true</code> disables default validation for file size, accepts only boolean</li>\n<li>fileNonEmpty - Providing <code>true</code> disables default validation for empty files, accepts only boolean</li>\n<li>fileNameMaxLength - Providing <code>true</code> disables default validation for file name length, accepts only boolean</li>\n</ul>\n","line":147,"type":"IAvailableValidators","decorators":[]},{"name":"maxAllowedFiles","defaultValue":"Infinity","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets how many files can be submitted, accepts only numbers.\n","description":"<p>Sets how many files can be submitted, accepts only numbers.</p>\n","line":134,"type":"number","decorators":[]},{"name":"minRequiredFiles","defaultValue":"1","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets the minimum number of files to be uploaded, accepts only numbers.\n","description":"<p>Sets the minimum number of files to be uploaded, accepts only numbers.</p>\n","line":139,"type":"number","decorators":[]},{"name":"uploadInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\n\nDisplays upload progress bar, accepts only boolean.\n","description":"<p>Displays upload progress bar, accepts only boolean.</p>\n","line":152,"type":"boolean","decorators":[]},{"name":"uploadProgress","deprecated":false,"deprecationMessage":"","rawdescription":"\nThe array of progress state objects for each selected file (matched by index).","description":"<p>The array of progress state objects for each selected file (matched by index).</p>\n","line":155,"type":"IFetchWithProgress[]","decorators":[]},{"name":"validateExtensionOnDrag","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\nDisplay warning if any file dragged over the drop area has unsupported extension.","description":"<p>Display warning if any file dragged over the drop area has unsupported extension.</p>\n","line":158,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"dropped","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\nEmits an event with the array of File objects representing the dropped files.","description":"<p>Emits an event with the array of File objects representing the dropped files.</p>\n","line":161,"type":"EventEmitter<File[]>"}],"propertiesClass":[{"name":"acceptedExts","deprecated":false,"deprecationMessage":"","type":"string[]","indexKey":"","optional":false,"description":"","line":170},{"name":"controlInstance","deprecated":false,"deprecationMessage":"","type":"AbstractControl","indexKey":"","optional":false,"description":"","line":173},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":175},{"name":"disabledValidators","defaultValue":"{\n    fileMaxSize: false,\n    fileNonEmpty: false,\n    fileNameMaxLength: false\n  }","deprecated":false,"deprecationMessage":"","type":"IAvailableValidators","indexKey":"","optional":false,"description":"","line":176},{"name":"droppedFiles","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"File[]","indexKey":"","optional":false,"description":"","line":163},{"name":"errors","deprecated":false,"deprecationMessage":"","type":"ValidationErrors","indexKey":"","optional":false,"description":"","line":172},{"name":"filePlaceholder","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLElement>","indexKey":"","optional":false,"description":"","line":101,"decorators":[{"name":"ViewChild","stringifiedArguments":"'filePlaceholder', {static: true}"}],"modifierKind":[170]},{"name":"isDraggedFileUnsupported$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":169},{"name":"isDraggingFiles$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":165},{"name":"isDraggingOverFilePlaceholder$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":166},{"name":"isDropAreaEnlarged$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":168},{"name":"isExtensionAllowed$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":167},{"name":"loadingMessage","defaultValue":"gettext('Upload in progress')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":181},{"name":"valid","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":171}],"methodsClass":[{"name":"afterValueChanged","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":304,"deprecated":false,"deprecationMessage":""},{"name":"deleteAt","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":339,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"filesSelected","args":[{"name":"ev","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"ev","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":223,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":190,"deprecated":false,"deprecationMessage":""},{"name":"onDragOver","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":369,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"'window:dragover', ['$event']"}],"modifierKind":[170],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDrop","args":[{"name":"e","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":312,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"e","type":"DragEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onWindowDrop","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":374,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"'window:drop', ['$event']"}],"modifierKind":[170],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnChange","args":[{"name":"fn","type":"never","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":344,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"never","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"never","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":348,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"never","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnValidatorChange","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":356,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":352,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":378,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"files","type":"File[] | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":360,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"files","type":"File[] | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:dragover","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":369},{"name":"window:drop","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":374}],"standalone":true,"imports":[{"name":"FormGroupComponent","type":"component"},{"name":"NgIf"},{"name":"IconDirective","type":"directive"},{"name":"MessagesComponent","type":"component"},{"name":"NgFor"},{"name":"MessageDirective","type":"directive"},{"name":"LoadingComponent","type":"component"},{"name":"ExtractArrayValidationErrorsPipe","type":"pipe"},{"name":"FilterNonArrayValidationErrorsPipe","type":"pipe"},{"name":"HumanizeValidationMessagePipe","type":"pipe"},{"name":"AsyncPipe","type":"pipe"},{"name":"KeyValuePipe","type":"pipe"},{"name":"C8yTranslatePipe","type":"pipe"},{"name":"BytesPipe","type":"pipe"},{"name":"GenericFileIconPipe","type":"pipe"}],"description":"<p>File uploader</p>\n","rawdescription":"\n\nFile uploader\n","type":"component","assetsDirs":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"filesService","type":"FilesService","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""}],"line":183,"jsdoctags":[{"name":"filesService","type":"FilesService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","AfterViewInit","ControlValueAccessor","Validator"],"readme":"<h1>File picker form control</h1>\n<p>Allows to select a binary for upload.\nComponent provides drop area functionality allowing you to just drop files within specified area.\nAttributes:</p>\n<ul>\n<li><strong>maxAllowedFiles</strong>  maximum number of total files to be selected</li>\n<li><strong>minRequiredFiles</strong> minimum number of total files to be selected </li>\n<li><strong>accept</strong> type of files allowed for upload</li>\n<li><strong>disableValidators</strong> disable specific validators</li>\n<li><strong>dropped</strong> function callback to be invoked upon drop action</li>\n<li><strong>uploadInProgress</strong> boolean flag indicating whenever there is upload ongoing</li>\n<li><strong>uploadProgress</strong> the array of progress state objects for each selected file</li>\n<li><strong>validateExtensionOnDrag</strong> turn on/off validation on file drag event</li>\n</ul>\n<h2>Usage Example:</h2>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;div&gt;\n    &lt;c8y-file-picker-form-control\n        #filePicker\n        [formControl]=&quot;control&quot;\n        [uploadInProgress]=&quot;isLoading&quot;\n        (dropped)=&quot;onFileDroppedEvent($event)&quot;\n        [uploadProgress]=&quot;uploadProgress&quot;\n    &gt;&lt;/c8y-file-picker-form-control&gt;\n&lt;/div&gt;</code></pre></div>"}