{"name":"ContextDashboardStateService","id":"injectable-ContextDashboardStateService-9fc05deab04337240ad807e861cb4febc445b2551037bf64d38460d3e1c29842af3679e0cf32956c9a4aa3ea3046061193fb4bcb8842cecd2964d4585b91cd80","file":"context-dashboard-state/context-dashboard-state.service.ts","properties":[{"name":"dashboardDefaultState","defaultValue":"signal<StateType | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Signal holding the <em>initial</em> state extracted from the dashboard when it was selected.</p>\n","line":42,"rawdescription":"\nSignal holding the *initial* state extracted from the dashboard when it was selected.","modifierKind":[148]},{"name":"globalState","defaultValue":"signal<StateType | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Signal holding the <em>current</em>, potentially modified, context state.</p>\n","line":45,"rawdescription":"\nSignal holding the *current*, potentially modified, context state.","modifierKind":[148]},{"name":"hasChanges","defaultValue":"computed(() => {\n    const defaultState = this.dashboardDefaultState();\n    const currentState = this.globalState();\n\n    // Handle cases where one or both states are null\n    if (defaultState === null && currentState === null) {\n      return false; // No changes if both are null\n    }\n    if (defaultState === null || currentState === null) {\n      return true; // Changes if one is null and the other isn't\n    }\n    // Use deep equality check for object comparison\n    return !isEqual(defaultState, currentState);\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Computed signal indicating whether the current globalState differs from the dashboardDefaultState.</p>\n","line":60,"rawdescription":"\nComputed signal indicating whether the current globalState differs from the dashboardDefaultState.","modifierKind":[148]},{"name":"inventory","defaultValue":"inject(InventoryService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148]},{"name":"isSaveDisabled","defaultValue":"new BehaviorSubject<boolean>(true)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>BehaviorSubject indicating if the save action should be disabled.</p>\n","line":53,"rawdescription":"\nBehaviorSubject indicating if the save action should be disabled.","modifierKind":[148]},{"name":"selected$","defaultValue":"new BehaviorSubject<DashboardWithState<StateType> | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>BehaviorSubject mirroring the selected dashboard signal.</p>\n","line":50,"rawdescription":"\nBehaviorSubject mirroring the selected dashboard signal.","modifierKind":[148]},{"name":"selectedDashboard","defaultValue":"signal<DashboardWithState<StateType> | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Signal holding the currently selected dashboard object.</p>\n","line":39,"rawdescription":"\nSignal holding the currently selected dashboard object.","modifierKind":[148]}],"methods":[{"name":"extractStateFromDashboard","args":[{"name":"dashboard","type":"DashboardWithState<StateType> | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"StateType | null","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nExtracts the context state from a dashboard object.\nAssumes the state is located at `dashboard.c8y_Dashboard.dashboardState`.\nModify the access path if your dashboard structure is different.\n\n","description":"<p>Extracts the context state from a dashboard object.\nAssumes the state is located at <code>dashboard.c8y_Dashboard.dashboardState</code>.\nModify the access path if your dashboard structure is different.</p>\n","jsdoctags":[{"name":{"pos":4309,"end":4318,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"dashboard"},"type":"DashboardWithState<StateType> | null","deprecated":false,"deprecationMessage":"","tagName":{"pos":4303,"end":4308,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The dashboard object.</p>\n"},{"tagName":{"pos":4347,"end":4354,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The extracted state object or null if not found.</p>\n"}]},{"name":"getDashboardDefaultState","args":[],"optional":false,"returnType":"StateType | null","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets the initial default state extracted from the dashboard.\n","description":"<p>Gets the initial default state extracted from the dashboard.</p>\n","jsdoctags":[{"tagName":{"pos":6524,"end":6531,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The default state or null.</p>\n"}]},{"name":"getGlobalState","args":[],"optional":false,"returnType":"StateType | null","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets the current global state object.\n","description":"<p>Gets the current global state object.</p>\n","jsdoctags":[{"tagName":{"pos":5929,"end":5936,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The current state or null.</p>\n"}]},{"name":"getSelectedDashboard","args":[],"optional":false,"returnType":"DashboardWithState | null","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nGets the currently selected dashboard object.\n","description":"<p>Gets the currently selected dashboard object.</p>\n","jsdoctags":[{"tagName":{"pos":6765,"end":6772,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"returns"},"comment":"<p>The selected dashboard or null.</p>\n"}]},{"name":"resetGlobalState","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nResets the current global state back to the initial default state\nthat was extracted when the dashboard was selected.\n","description":"<p>Resets the current global state back to the initial default state\nthat was extracted when the dashboard was selected.</p>\n"},{"name":"saveDashboardState","args":[{"name":"mo","type":"any","deprecated":false,"deprecationMessage":""},{"name":"state","type":"Record<string | any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","modifierKind":[134],"jsdoctags":[{"name":"mo","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSelectedDashboard","args":[{"name":"dashboard","type":"DashboardWithState<StateType>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nSets the currently selected dashboard, extracts its default state,\nand initializes the global state.\n","description":"<p>Sets the currently selected dashboard, extracts its default state,\nand initializes the global state.</p>\n","jsdoctags":[{"name":{"pos":3277,"end":3286,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"dashboard"},"type":"DashboardWithState<StateType>","deprecated":false,"deprecationMessage":"","tagName":{"pos":3271,"end":3276,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>The dashboard object to select.</p>\n"}]},{"name":"updateGlobalState","args":[{"name":"newState","type":"Partial<StateType>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\n\nUpdates the current global state by merging in new partial state values.\nEnables the save button only if the resulting state differs from the default state.\n\n","description":"<p>Updates the current global state by merging in new partial state values.\nEnables the save button only if the resulting state differs from the default state.</p>\n","jsdoctags":[{"name":{"pos":4837,"end":4845,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"newState"},"type":"Partial<StateType>","deprecated":false,"deprecationMessage":"","tagName":{"pos":4831,"end":4836,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>A partial object containing the state properties to update.</p>\n"}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Generic service responsible for managing dashboard context state.</p>\n<p>This service:</p>\n<ol>\n<li>Stores the currently selected dashboard (typed with StateType)</li>\n<li>Extracts and stores the default state from the selected dashboard</li>\n<li>Manages updates to the current context state (of type StateType)</li>\n<li>Compares current state with default state to detect changes</li>\n<li>Provides methods to get/reset state and prepare the dashboard for saving</li>\n<li>Requires confirmation after external save operations to update its internal default state.</li>\n</ol>\n","rawdescription":"\n\nGeneric service responsible for managing dashboard context state.\n\n\nThis service:\n1. Stores the currently selected dashboard (typed with StateType)\n2. Extracts and stores the default state from the selected dashboard\n3. Manages updates to the current context state (of type StateType)\n4. Compares current state with default state to detect changes\n5. Provides methods to get/reset state and prepare the dashboard for saving\n6. Requires confirmation after external save operations to update its internal default state.\n","extends":[],"type":"injectable"}