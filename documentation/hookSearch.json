{"name":"hookSearch","file":"core/search/search.service.ts","ctype":"miscellaneous","subtype":"function","deprecated":true,"deprecationMessage":"Please don't use the search factory. It will be refactored soon.","description":"<p>You can either provide a single <code>Search</code> as parameter:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> hookSearch(...)</code></pre></div><p>Or an array to directly register multiple:</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> hookSearch([...])</code></pre></div><p>Or you provide an Service that implements <code>ExtensionFactory&lt;Search&gt;</code></p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-typescript\"> export class MySearchFactory implements ExtensionFactory&lt;Search&gt; {...}\n ...\n hookSearch(MySearchFactory)</code></pre></div><p>A typed alternative to <code>HOOK_SEARCH</code>.</p>\n","args":[{"name":"search","type":"GenericHookType","deprecated":false,"deprecationMessage":""},{"name":"options","type":"Partial","deprecated":false,"deprecationMessage":"","optional":true}],"jsdoctags":[{"name":{"pos":1207,"end":1213,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"search"},"type":"GenericHookType","deprecated":false,"deprecationMessage":"","tagName":{"pos":1201,"end":1206,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>The <code>Search</code>&#39;s or <code>ExtensionFactory</code> to be provided.</p>\n"},{"name":"options","type":"Partial","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"tagName":{"pos":1271,"end":1278,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>An <code>Provider</code> to be provided in your module.</p>\n"}]}