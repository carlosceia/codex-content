{"name":"WIDGET_TEMPLATES","ctype":"miscellaneous","subtype":"variable","file":"global-context/templates/custom-widget-templates.ts","deprecated":false,"deprecationMessage":"","type":"Record<string, WidgetControlTemplate>","defaultValue":"{\n  'alarm-list': WidgetTemplateBuilder.create()\n    .addSupports('dateTimeContext', 'refreshInterval', 'isAutoRefreshEnabled')\n    // CONFIGURATION\n    .updateConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.HISTORY, {\n      showTimeContext: true\n    })\n    .updateConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.HISTORY, {\n      showTimeContext: true\n    })\n    // SETTINGS\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      showTimeContext: false,\n      showAutoRefresh: false\n    })\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {\n      showAutoRefresh: false,\n      showTimeContext: false\n    })\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {\n      showTimeContext: true,\n      showRefresh: false\n    })\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.HISTORY, {\n      showTimeContext: true\n    })\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.HISTORY, {\n      showTimeContext: false,\n      showRefresh: true\n    })\n    .addStateHandler('scrolling', widgetState => {\n      const { config, inlineControlSettings, dashboardControlSettings, currentLinks } = widgetState;\n      const { displayMode } = config;\n\n      const isDashboardMode = displayMode === GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD;\n      if (!isDashboardMode && !currentLinks.isAutoRefreshEnabled) {\n        return {\n          inlineControlSettings: {\n            ...inlineControlSettings,\n            showAutoRefresh: true\n          },\n          dashboardControlSettings: {\n            ...dashboardControlSettings,\n            showAutoRefresh: false\n          },\n          links: {}\n        };\n      }\n\n      return {\n        inlineControlSettings: {\n          ...inlineControlSettings,\n          showAutoRefresh: true\n        },\n        dashboardControlSettings: {\n          ...dashboardControlSettings,\n          showAutoRefresh: false\n        },\n        links: { ...currentLinks, isAutoRefreshEnabled: false }\n      };\n    })\n    .build(),\n\n  'kpi-widget': WidgetTemplateBuilder.create()\n    .addSupports('isAutoRefreshEnabled', 'refreshInterval', 'dateTimeContext')\n    // CONFIGURATION\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {})\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {})\n    // SETTINGS\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      showAutoRefresh: true\n    })\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {})\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {})\n    // DEFAULT LINKS\n    .setDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      isAutoRefreshEnabled: true\n    })\n    .build(),\n\n  'map-widget': WidgetTemplateBuilder.create()\n    .addSupports('refreshInterval', 'isAutoRefreshEnabled')\n    // CONFIGURATION\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {\n      showRefreshInterval: true,\n      showAutoRefresh: true\n    })\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {\n      showRefreshInterval: true,\n      showAutoRefresh: true,\n      showRefresh: false\n    })\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {})\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {\n      showAutoRefresh: true\n    })\n    // DEFAULT LINKS\n    .setDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      isAutoRefreshEnabled: true\n    })\n    .setDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {})\n    .addStateHandler('startFollow', () => {\n      return {\n        inlineControlSettings: { showAutoRefresh: false },\n        dashboardControlSettings: { showAutoRefresh: false },\n        links: {}\n      };\n    })\n    .addStateHandler('stopFollow', widgetState => {\n      const { config, dashboardControlSettings } = widgetState;\n      const { displayMode } = config;\n\n      let adjustedInlineControlSettings =\n        WIDGET_TEMPLATES['map-widget'].settings[config.displayMode][config.refreshOption];\n      let adjustedDashboardControlSettings = {};\n      let links = {};\n      const isDashboardMode = displayMode === GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD;\n      if (isDashboardMode) {\n        adjustedInlineControlSettings =\n          config.refreshOption === REFRESH_OPTION.LIVE\n            ? {\n                showAutoRefresh: false\n              }\n            : {\n                showAutoRefresh: true\n              };\n\n        links =\n          config.refreshOption === REFRESH_OPTION.LIVE\n            ? { isAutoRefreshEnabled: true }\n            : { isAutoRefreshEnabled: false };\n\n        adjustedDashboardControlSettings = {\n          ...dashboardControlSettings,\n          showAutoRefresh: false\n        };\n      }\n\n      return {\n        inlineControlSettings: adjustedInlineControlSettings,\n        dashboardControlSettings: adjustedDashboardControlSettings,\n        links\n      };\n    })\n    .addStateHandler('disableCounter', () => {\n      return {\n        inlineControlSettings: null,\n        dashboardControlSettings: null,\n        links: null,\n        options: { noAutoRefreshCounter: true }\n      };\n    })\n    .build(),\n\n  'datapoints-table-widget': WidgetTemplateBuilder.create()\n    .addSupports('isAutoRefreshEnabled', 'aggregation', 'dateTimeContext', 'refreshInterval')\n    // CONFIGURATION\n    .updateConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.HISTORY, {\n      showAggregation: true\n    })\n    .updateConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.HISTORY, {\n      showAggregation: true\n    })\n    // SETTINGS\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      showTimeContext: false,\n      showAutoRefresh: false\n    })\n    // .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {})\n    // .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {})\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {\n      showTimeContext: false,\n      showAggregation: false\n    })\n    // DEFAULT LINKS\n    .updateDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {\n      isAutoRefreshEnabled: true,\n      dateTimeContext: true\n    })\n    .updateDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {\n      dateTimeContext: true,\n      aggregation: true\n    })\n    .build(),\n\n  'datapoints-graph-widget': WidgetTemplateBuilder.create()\n    .addSupports('isAutoRefreshEnabled', 'aggregation', 'dateTimeContext')\n    // CONFIGURATION\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {\n      showAutoRefresh: true,\n      showTimeContext: true\n    })\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.HISTORY, {\n      showTimeContext: true,\n      showAggregation: true\n    })\n    .setConfigSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {})\n    // SETTINGS\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {})\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.CONFIG, REFRESH_OPTION.LIVE, {})\n    .setSettings(GLOBAL_CONTEXT_DISPLAY_MODE.VIEW_AND_CONFIG, REFRESH_OPTION.LIVE, {})\n    .updateSettings(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {\n      showTimeContext: false,\n      showAggregation: false\n    })\n    // DEFAULT LINKS\n    .setDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.LIVE, {})\n    .updateDefaultLinks(GLOBAL_CONTEXT_DISPLAY_MODE.DASHBOARD, REFRESH_OPTION.HISTORY, {\n      dateTimeContext: true,\n      aggregation: true\n    })\n    .build()\n}","rawdescription":"Widget templates defined using the Builder pattern.\nThis improves maintainability and readability compared to direct object literals.","description":"<p>Widget templates defined using the Builder pattern.\nThis improves maintainability and readability compared to direct object literals.</p>\n"}